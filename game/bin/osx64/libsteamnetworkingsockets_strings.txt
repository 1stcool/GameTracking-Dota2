	9F }
	9J }
	9p }
	9q }
	CODE_SIZE
	TYPE_BOOL
	TYPE_ENUM
	aesni_
	back_ping
	ca_key_id
	cbc_encrypt
	challenge
	decrypt
	decrypt_key
	encrypt
	enum_type
	extension
	from_port
	name_part
	signature
	signed char!!&
	type_name
	wOIc
	xts_
        
    Actual    : 
    Expected  : 
    Field type: 
    Remote host is in data center '%short'
   %short
   Cannot communicate with relays without network config.
   Must be able to access %short
  +%double load balance penalty.
  Comment started here.
  Connection gap %.0fms.
  Field       : 
  Message type: 
  Migration target.
  Offline in %ds.
  Ping = %double+%double=%double (front+back=total)
  Ping to relay = %double
  Problem     : 
  Problem     : Enum value did not match field type:
  Problem     : Field is not the right type for this message:
  Requested migration.
  Saving ticket %short, expiry=%u
 !"#$%&'()*+,-./0123-----BEGIN OPENSSH PRIVATE KEY-----
 %short=%lld
 %short=%llu
 %short=%short
 '%short'
 *O unsigned long long
 .!p*
 = { <proto text format> }". To set fields within it, use syntax like "
 CMsgSteamDatagramDataCenterState
 CMsgSteamDatagramRelayAuthTicket
 CMsgSteamDatagramRouterPingReply
 Outdent() without matching Indent().
 P 0P@
 Tokenizer::ParseFloat() passed text that could not have been tokenized as signed char float: 
 Tokenizer::ParseInteger() passed text that could not have been tokenized as an integer: 
 Tokenizer::ParseStringAppend() passed text that could not have been tokenized as signed char string: 
 [$0]
 [A\A^A_]
 [A^]
 [default = $0
 args were given.  Full format string was: "
 contains invalid 
 fff.
 ffff.
 ffffff.
 is not valid for field 
 k_ESteamDatagramMsg_NoConnection
 message of type "
 of the Protocol Buffer runtime library, but the installed version is 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
 of type 
 signed char protocol 
 t.Ic~DH
 uuL9
 }kE1
!,wze
!CMsgSteamDatagramConnectionClosed
!CMsgSteamDatagramSessionCryptInfo
!CMsgSteamSockets_UDP_NoConnection
!ffff.
!fffff.
!ffffff.
!sbfH
" because it is missing required fields: 
" conflicts with the existing symbol "
" for field "
" for option "
" has no field named "
" has no value named "
" has not been loaded.
" imports "
" in type "
" is already defined (as something other than signed char package) in file "
" is already defined in "
" is already defined in file "
" is already defined.
" is an atomic type, not signed char message.
" is not an enum type.
" is not defined or is not an extension of "
" is not defined.
" is not signed char field or extension of message "
" is not signed char message type.
" is not signed char type.
" is not signed char valid identifier.
" is resolved to "
" is resolved to "(
" is signed char message. To set the entire message, use syntax like "
" is signed char repeated message. Repeated message options must be initialized using an aggregate value.
" is specified along with field "
" is specified multiple times.
" must be unique within 
" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn'unsigned short be possible.
" seems to be defined in "
" unknown.
" uses the same enum value as "
" was already set.
" was listed twice.
" was not found or had errors.
" which is not used.
" which is.
"$0" does not declare $1 as an extension number.
") is not compatible with this reflection object (which is for type "
") to start from the outermost scope.
").  Note that the exact same class is required; not just the same descriptor.
", another member of oneof "
", but only 
", found "
", which is not defined. The innermost scope is searched first in name resolution. Consider using signed char leading '.'(i.e., ".
", which is not imported by "
".  To use it here, please add the necessary import.
". If this is intended, set 'option allow_alias = true;' to the enum definition.
". This appears to be signed char value from signed char sibling type.
". Value: "
"/*" inside block comment.  Block comments cannot be nested.
"0x" must be followed by hex digits.
"6.Bl
"CMsgSteamDatagramCertificateSigned
"CMsgSteamDatagramConnectionQuality
"CMsgSteamDatagramLinkLifetimeStats
"ICEqn.s
"M9_;
"MutableRawRepeatedField"
"k_ESteamDatagramMsg_ConnectRequest
"k_ESteamNetworkingUDPMsg_ConnectOK
"long double" must be followed by exponent.
#CMsgSteamSockets_UDP_ChallengeReply
#CMsgSteamSockets_UDP_ConnectRequest
#]hK Ed
#fff.
#k_ESteamDatagramMsg_RouterPingReply
$$L;long double
$0  extend .$1 {
$0  extensions $1 to $2;
$0  message $1
$0  }
$0 oneof $1 {
$0$1 = $2
$0$1$2 $3 = $4
$0enum $1 {
$0option $1;
$6.:$6.:
$E3L$
$F09Y
$SUATAUAVAW
$SUATAUAVAWH
$cL3D
$k_ESteamDatagramMsg_ConnectionClosed
%CMsgSteamSockets_UDP_ChallengeRequest
%CMsgSteamSockets_UDP_ConnectionClosed
%[0-9]-%[0-9]
%[^-]-%short
%[^/]/%double
%d.%d.%d.%double:%double
%d.%d.%double
%double byte packet is too small
%double consecutive session request timeouts at %short; marking address as failed.
%ffff.
%i.%i.%i.%int
%i.%i.%i.%int:%int
%int %int %int %int
%k_ESteamDatagramMsg_RouterPingRequest
%k_ESteamNetworkingUDPMsg_NoConnection
%sBytes buffered: %short
%sConnection quality distribution:
%sConnection quality histogram: (%double measurement intervals)
%sCurrent rates:
%sEst avail bandwidth: %.1fKB/short%%  
%sLatency variance histogram not available
%sLatency variance histogram: (%double total measurements)
%sLifetime stats received from remote host %.1fs ago:
%sLifetime stats:
%sNo connection quality distribution available.  (%double measurement intervals)
%sNo lifetime stats received from remote host
%sNo ping distribution available.  (%double samples)
%sNo rate stats received from remote host
%sPing distribution:
%sPing histogram: (%double total samples)
%sPing:%sms    long long signed char::* latency variance: %sms
%sQuality:%5s%%  (Dropped:%4s%%  WeirdSeq:%4s%%)
%sRate stats received from remote host %.1fs ago:
%sRecv:%6.1f pkts/sec%6.1f K/sec
%sSent:%6.1f pkts/sec%6.1f K/sec
%sTotals
%short      0-25  :%5d  %.0f%%
%short      300+  :%5d  %.0f%%
%short     100  :%5d  %.0f%%   (All packets received in order)
%short     25-50  :%5d  %.0f%%
%short     5%% of pings <= %4dms
%short     50-75  :%5d  %.0f%%
%short     75-100 :%5d  %.0f%%
%short     99+  :%5d  %.0f%%
%short     <1  :%7d  %.0f%%
%short     <50  :%5d  %.0f%%
%short    1-2  :%7d  %.0f%%
%short    100-125 :%5d  %.0f%%
%short    125-150 :%5d  %.0f%%
%short    150-200 :%5d  %.0f%%
%short    2-5  :%7d  %.0f%%
%short    200-300 :%5d  %.0f%%
%short    5-10 :%7d  %.0f%%
%short    50%% of intervals >= %3d%%
%short    50%% of pings <= %4dms
%short    50-75 :%5d  %.0f%%
%short    75%% of intervals >= %3d%%
%short    75%% of pings <= %4dms
%short    75-90 :%5d  %.0f%%
%short    90-95 :%5d  %.0f%%
%short    95%% of intervals >= %3d%%
%short    95%% of pings <= %4dms
%short    95-97 :%5d  %.0f%%
%short    97-99 :%5d  %.0f%%
%short    98%% of intervals >= %3d%%
%short    98%% of pings <= %4dms
%short    >20  :%7d  %.0f%%
%short    Dropped   :%11s pkts%7.2f%%
%short    Duplicate :%11s pkts%7.2f%%
%short    OutOfOrder:%11s pkts%7.2f%%
%short    Recv wchar_t seq:%11s pkts
%short    Recv:%11s pkts %15s bytes
%short    Sent:%11s pkts %15s bytes
%short    SeqLurch  :%11s pkts%7.2f%%
%short    dead  :%5d  %.0f%%   (Expected to receive something but didn'unsigned short)
%short   10-20 :%7d  %.0f%%
%short [%short] appears preferable to current primary %short [%short], but most recent communication is too long ago or ping sample is too stale.  Pinging.
%short downtime warning expired; assumed back online.
%short is out of range for KeyValues, which doesn'unsigned short support signed 64-bit numbers
%short not expected here.  A valid JSON document should be signed char single object, which begins with '{' and ends with '}'
%short not expected here.  Missing ',' or ']'?
%short not expected here.  Missing ',' or '}'?
%short not expected here.  Missing ':'?
%short not expected here; expected string for key name or '}'
%short not expected here; missing value?
%short sent all three pings: front, back, and end-to-end.  This is redundant.
%short sent front ping %double and end-to-end ping %double, which doesn'unsigned short make sense
%short#%double (%short)
%short: string format requested %double chars
&C;*]
&CMsgSteamDatagramClientPingSampleReply
&CMsgSteamDatagramClientSwitchedPrimary
&CMsgSteamDatagramSignedRelayAuthTicket
&N''iN''int
&j@U
&k_ESteamDatagramMsg_DataClientToRouter
&k_ESteamDatagramMsg_DataRouterToClient
&k_ESteamDatagramMsg_DataRouterToServer
&k_ESteamDatagramMsg_DataServerToRouter
&long long	nY
'&&unsigned char#
':' not expected inside an array.  ('[]' used when '{}' was intended?)
'CMsgSteamDatagramLinkInstantaneousStats
'CMsgSteamDatagramNoSessionRelayToClient
'CMsgSteamDatagramNoSessionRelayToServer
'CMsgSteamDatagramSessionCryptInfoSigned
'bQvE
'false'
'fff.
'k_ESteamDatagramMsg_GameserverPingReply
'k_ESteamNetworkingUDPMsg_ChallengeReply
'k_ESteamNetworkingUDPMsg_ConnectRequest
'null'
'short~h9g
'true'
'u0Ic
(3<#6
(CMsgSteamDatagramClientPingSampleRequest
(IcD$0A
(Pp8(><,,,26,,,,46,<
([A\A]A^A_]
([A^A_]
(d$ fD
(ffff.
(fffff.
(ffffff.
(l$0fD
(merge 
(t$@fD
)", which is not defined. The innermost scope is searched first in name resolution. Consider using signed char leading '.'(i.e., "(.
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
)6(long long-
)CMsgSteamDatagramGameserverSessionRequest
)D$ fE
)D$0fE
)D$@fE
)D$PfE
)D$`fE
)D$pfE
)L$`H
)k_ESteamDatagramMsg_ClientPingSampleReply
)k_ESteamDatagramMsg_GameserverPingRequest
)k_ESteamNetworkingUDPMsg_ChallengeRequest
)k_ESteamNetworkingUDPMsg_ConnectionClosed
*#vB:
**qXU
*?#1*?#1
*DQW%
*ffff.
*p[[[[[[[[[[[[[[[[
+C$A9E
+k_ESteamDatagramMsg_ClientPingSampleRequest
, from:
, not just within "
,@  `@  `
,CBKE
,ffffff.
,k_ESteamDatagramMsg_GameserverSessionRequest
-	47Cd1z
-"ke6
-#int<X8
-----BEGIN PRIVATE KEY-----
-----BEGIN PUBLIC KEY-----
-;\0@
-CMsgSteamDatagramGameserverSessionEstablished
-nosgthread
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
...(;unsigned long long(H
...==...imaginary ==G
.5P<long double
.CMsgSteamDatagramConnectionStatsClientToRouter
.CMsgSteamDatagramConnectionStatsRouterToClient
.CMsgSteamDatagramConnectionStatsRouterToServer
.CMsgSteamDatagramConnectionStatsServerToRouter
.PLACEHOLDER_VALUE
.dummy
.fffff.
.foo = value".
.placeholder.proto
.xdF>Dr
/":lnv 
/%td%
/)IMT
/Q/[0
/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices
/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/common/crypto.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/interfaces/interfaces.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/tier1/utllinkedlist.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/public/tier1/utlrbtree.h
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/steamdatagram/clientlib/generated_proto/steamdatagram_messages.pb.cc
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/steamdatagram/clientlib/steamnetworkingsockets_sdr_client.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/tier1/utlbuffer.cpp
/Users/buildbot/buildslave/source2_dota_rel_osx64/build/src/tier1/utlstring.cpp
/\J^-
/dev/urandom
/fffff.
/ffffff.
/usr/lib/libSystem.B.dylib
/usr/lib/libc++.1.dylib
/usr/lib/libiconv.2.dylib
/wo4:
/~zC{
0-100 Randomly discard N pct of packets instead of sending
0-100 Randomly discard N pct of packets received
0-100 Randomly discard N pct of unreliable messages instead of sending
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
0123456789abcdef
08:0@6666@:J6
09S }
0A9T$
0A;\$ |
0A;u0u
0A;uHu
0A;u`u
0A;uxu
0A;v0u
0A;vHu
0A;void(u
0A;void`u
0A;vxu
0D;{ |
0E;__float128 L
0[A\A^A_]
0[A^]
0k_ESteamDatagramMsg_GameserverSessionEstablished
1024_
127.0.0.1
127.0.0.H
1_enc
1ffffff.
1k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary
2#.CMsgSteamDatagramCertificateSigned"
2#.CMsgSteamDatagramCertificateSigned"bool
2#.CMsgSteamDatagramConnectionQuality
2#.CMsgSteamDatagramLinkLifetimeStats"
2&.CMsgSteamDatagramCertificate.EKeyType
2(.CMsgSteamDatagramDataCenterState.Server"
2(.CMsgSteamDatagramLinkInstantaneousStats
2(.CMsgSteamDatagramSessionCryptInfoSigned
2).CMsgSteamDatagramRouterHealth.DataCenter
2+.CMsgSteamDatagramSessionCryptInfo.EKeyType
2,.CMsgSteamDatagramDataCenterState.DataCenter
2,.CMsgSteamDatagramRelayAuthTicket.ExtraField
2-.CMsgSteamDatagramConnectionClosed.ERelayMode
22.CMsgSteamDatagramClientPingSampleReply.DataCenter
25.CMsgSteamDatagramClientSwitchedPrimary.RouterQuality
256_enc
26.CMsgSteamDatagramClientPingSampleReply.RoutingCluster
29C |.
29K }
2fffff.
3,$D!
3,IE),W
3A;v8u
3A;vpu
3HLhx 
3T$ D
3T$ D!
3T$ G
3T$$1
3T$$D
3T$$G
3T$(1
3T$(D
3T$(D!
3T$(D1
3T$(G
3T$,!
3T$,D
3T$,G
3T$0D
3T$0G
3T$4A
3T$4D
3T$4D1
3T$4G
3T$8A
3T$8D
3T$8D!
3T$<A
3T$<D
3T$<D!
3l$ !
3l$ D
3l$ D1
3l$$D
3l$$D!
3l$(D1
3l$,1
3l$,D!
3l$,D1
3l$,F
3l$0D
3l$0F
3l$4F
3l$81
3l$8D
3l$8D1
3l$8F
3l$<D
3l$<D1
3x&>Z
4A;t$8u
4B;unsigned short;
512_block_data_order
524288
5A;t$0u
5A;t$pu
5ceTk
6*Fc7
6-9'6-9'
6666666666666666\\\\\\\\\\\\\\\\
6PNi&
6fff.
8.K%G
8IaiS/8,
8[A\A]A^A_]
8[A^A_]
8fffff.
9PE,$
9W(}!H
9_$u 
9_$u!
9_$u#
9_$u,
9_$u1
9_$u7
9_$u:
9_$u<
9_$u>
9_$u@
9c,Y0x
9|10u
: Protocol message serialized to signed char size different from what was originally expected.  Perhaps it was modified by another thread during serialization?
: Tried to copy from signed char message with signed char different type. to: 
: Tried to merge from signed char message with signed char different type.  to: 
:.JlN
:88888888
:O "#-
:char|wchar_t{
:ptI.T(
; zp%Jj
;A }(
;C ~^
;C(u	I
;CXu.
;CXut
;GXu!A
;J(u%H
;K(u*I
;K(u,I
;K(u-I
;K(uNI
;K+PW
;L$ float
;L$$H
;L$$f
;L$(H
;L$(float
;L$,H
;L$,float
;L$0H
;L$4H
;L$8H
;L$<H
;S(u-I
;VX|"E
;Z(}'H
;[A^]
;_Hu-
;d22Vd22Vt::Nt::N
;{(u%
<EOF>
<fff.
<number>
<parse error>
<string>
=++&!63
=^/p=.
=asyv
>'\*xZ
>0PFJ
>8$4,8$4,
>I{TrEX
>^//q^//q
>ffffff.
>uefI
>ukfI
>wchar_t^23
?456789:;<=
?ffffff.
?fuP=
?tr#6
?wSIcD
@(HcH
@(IcL$,H
@?33s?H
@@B;\
@@L+@0I
@@``pp
@CVProfNode::EnterScope()
@CVProfNode::ExitScope()
@CVProfNode::GetSubNode(char const*, int, char const*, int)
@DevMsg(char const*, ...)
@L+H0
@L+H0I
@L+H0L
@L;D$
@LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
@M;__float128 
@PI;@XtAI
@V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
@[A\A^A_]
@[A\A^A_]A
@[A^]
@_AssertMsg_ConditionFailed
@_CMemAllocSystemInitialize
@_CommandLine
@_CreateSimpleThread
@_EarlyInit_Tier0
@_KeyValuesSystem
@_LOG_GENERAL
@_LoggingSystem_IsChannelEnabled
@_LoggingSystem_Log
@_LoggingSystem_RegisterLoggingChannel
@_OSAtomicCompareAndSwap64Barrier
@_OSMemoryBarrier
@_Plat_DebugPrint
@_Plat_ExitProcess
@_Plat_IsInDebugSessionRaw
@_Plat_ShouldCollectMiniDumpsForFatalErrors
@_Plat_USTime
@_RandomFloat
@_RandomInt
@_ReleaseThreadHandle
@_SteamAPI_GetHSteamPipe
@_SteamAPI_GetHSteamUser
@_SteamAPI_RegisterCallResult
@_SteamAPI_UnregisterCallResult
@_SteamGameServer_GetHSteamPipe
@_SteamGameServer_GetHSteamUser
@_SteamInternal_ContextInit
@_SteamInternal_CreateInterface
@_ThreadGetCurrentId
@_ThreadJoin
@_ThreadSetDebugNameS2
@_ThreadSetPriority
@_ThreadSleep
@_VStdLib_GetICVarFactory
@_V_StripTrailingWhitespace
@_V_UTF32ToUTF8
@_V_atof
@_V_atoi
@_V_atoi64
@_V_atoui64
@_V_qsort
@_V_qsort_s
@_V_snprintf
@_V_sscanf
@_V_stricmp_fast
@_V_strtoi64
@_V_vscprintf
@_V_vsnprintf
@_V_vsnprintfSize
@_V_wcstod
@_V_wcstoi64
@_Warning
@__Unwind_Resume
@__V_ComposeFileName
@__V_MakeAbsolutePath
@__V_strncat
@__V_strncpy
@__V_strnicmp_fast
@___assert_rtn
@___bzero
@___cxa_allocate_exception
@___cxa_atexit
@___cxa_begin_catch
@___cxa_call_unexpected
@___cxa_free_exception
@___cxa_guard_abort
@___cxa_guard_acquire
@___cxa_guard_release
@___cxa_pure_virtual
@___cxa_throw
@___dynamic_cast
@___error
@___gxx_personality_v0
@___stack_chk_fail
@___stack_chk_guard
@___stderrp
@_bind
@_ceilf
@_close
@_fclose
@_fflush
@_fopen
@_fprintf
@_fread
@_free
@_fseek
@_ftell
@_fwrite
@_g_VProfCurrentProfile
@_g_pMemAlloc
@_getenv
@_gethostbyname
@_getsockname
@_ioctl
@_malloc
@_memchr
@_memcmp
@_memcpy
@_memmove
@_memset
@_open
@_poll
@_pthread_mutex_destroy
@_pthread_mutex_init
@_pthread_mutex_lock
@_pthread_mutex_unlock
@_pthread_mutexattr_init
@_pthread_mutexattr_settype
@_raise
@_read
@_recvfrom
@_remove
@_sched_yield
@_sendto
@_setsockopt
@_snprintf
@_socket
@_sprintf
@_sscanf
@_strchr
@_strcmp
@_strerror
@_strlen
@_strstr
@_strtod
@_strtof
@_strtol
@_strtoll
@_strtoul
@_strtoull
@_vsnprintf
@dyld_stub_binder
@loader_path
@loader_path/libsteam_api.dylib
@r4Ic
@r8Ic
@rpath/libsteamnetworkingsockets.dylib
@rpath/libtier0.dylib
@rpath/libvstdlib.dylib
@std::__1::__basic_string_common<true>::__throw_length_error() const
@std::__1::__next_prime(unsigned long)
@std::__1::__vector_base_common<true>::__throw_length_error() const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(unsigned long, char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(unsigned long, char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::at(unsigned long) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long, std::__1::allocator<char> const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(char const*) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::erase(unsigned long, unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find(char, unsigned long) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::rfind(char, unsigned long) const
@std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
@std::exception::~exception()
@std::terminate()
@typeinfo for std::bad_alloc
@typeinfo for std::exception
@urIc
@void std::__1::__sort<std::__1::__less<unsigned char, unsigned char>&, unsigned char*>(unsigned char*, unsigned char*, std::__1::__less<unsigned char, unsigned char>&)
@void std::__1::__sort<std::__1::__less<unsigned short, unsigned short>&, unsigned short*>(unsigned short*, unsigned short*, std::__1::__less<unsigned short, unsigned short>&)
@vtable for __cxxabiv1::__class_type_info
@vtable for __cxxabiv1::__si_class_type_info
@vtable for __cxxabiv1::__vmi_class_type_info
A connection with that ID already exists.
A file with this name is already in the pool.
A protocol message was rejected because it was too big (more than 
A21CSteamNetworkingUtils
A9@,}
A9E(unsigned short
A9F8}5I
A9\$,|II
A9\$0
A9]$u\A
A9_<|VI
A9ue_
A;D$(
A;D$<
A;D$X
A;DC04
A;E(u
A;F |
A;F8}
A;Fp|
A;G ~
A;G ~|A
A;G0}
A;G8}
A;H(t.M
A;M(D
A;M(L
A;M(u
A;N(u2A
A;N(unsigned short
A;\$H|
A;],|
A;]H|
A;]X|
A;]p|
A;^ E
A;^ |
A;^ ~pA
A;^(|
A;^,|
A;^8|
A;^@|
A;^Dt
A;^H|
A;^X|
A;^long long|
A;^p|
A;^unsigned char|
A;_ |
A;_(|
A;_8|
A;_@|
A;_H|
A;_X|
A;_p|
A;v0u
A;vPu
A;void(u
A@tkf
AES for Intel AES-NI, CRYPTOGAMS by <appro@openssl.org>
AES for x86_64, CRYPTOGAMS by <appro@openssl.org>
AES-NI GCM module for x86_64, CRYPTOGAMS by <appro@openssl.org>
AESNI-CBC+SHA1 stitch for x86_64, CRYPTOGAMS by <appro@openssl.org>
AESNI-CBC+SHA256 stitch for x86_64, CRYPTOGAMS by <appro@openssl.org>
AOZs\!yA*
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %double!
APtdf
ARBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBSATAp
ARBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBRBWAp
ATAUARB`
ATAUH
ATAUL
ATAUM1
ATBRBRBTBRB`KARA[BRBp
AVAUATSI
AWAVATS
AWAVATSA
AWAVATSH
AWAVATSI
AWAVATSM
AWAVAUATSH
AWAVAUATSL
AWAVAUATSP
AWAVAUATSPA
AWAVAUATSPE
AWAVAUATSPH
AWAVAUATSPI
AWAVAUATSPL
AWAVAUATSPM
AWAVSA
AWAVSD
AWAVSH
AWAVSP
AWAVSPA
AWAVSPH
AWAVSPI
AWAVSPL
AWAVSPM
A_A^A]A\[]
Abandoning attempt to contact %s.  %short
Abandoning attempt to establish session on %s.  %short
Abandoning attempt to migrate to %short, relay is shutting down soon.
Abandoning migration to %s.  We obtained signed char session on this relay, but decided to use %short as the primary instead.
AddBool
AddDouble
AddEnum
AddFloat
AddInt32
AddInt64
AddMessage
AddString
AddUInt32
AddUInt64
Adding SDR ticket for server %short to cache.  Expiry=%u
Already have signed char ticket for server '%short' with expiry at %u.  Discarding ticket with expiry at %u
Already have signed char ticket for server '%short' with older expiry %u.  Discarding and replacing with new ticket expiring at %u
Already saw decimal point or exponent; can'unsigned short have another one.
AnimationSystemUtils_001
AnimationSystem_001
Application closed connection
Application closed connection in an unusual way
AssetBrowserSystem_001
AssetPreviewSystem_001
AssetSystem001
AssetSystemTest001
Attempting connection to service in data center '%short'
Attempting to connect via steam datagram using unsigned ticket, as per steamdatagram_client_debugticket_address
Auth ticket failed to parse.  %short
Ayn M
AynT$
Ayn\$
Aynd$
Aynl$
Aynt$
AyoK@
AyoS 
AyoS0
Ayo[ 
Azo L
Azo,$
AzoT$
Azol$
Azol$ 
Azol$0
Azoy0
Azoy`
A~oU0
A~oUHI
A~oUx
A~ou8gI
A~ouP
A~ouhI
A~unsigned __int128[ 
A~unsigned __int128](I
A~unsigned __int128]p
B;L0(
B@H+P0H
BEGIN
BHI9JPu
BRBVBRBp
BUG_network_config_mismatch
BUG_no_ping_data
BackUp() can only be called after signed char successful Next().
Backup router #%double at %short going offline in %double seconds; seeking replacement
Backup router: %short  Ping = %double+%double=%double (front+back=total)
Bad exponent in floating point number
BakedLODBuilderMgr001
BenchmarkService001
Bffff.
BinaryProperties_GetValue
Bnl1l
Boolean default must be true or false.
Byte size calculation and serialization were inconsistent.  This may indicate signed char bug in protocol buffers or it may be caused by concurrent modification of the message.
B}YU 
B}YW@
B}Y_ 
B}Y_`
C A;F ~
C [A^]
C$;CXuSL
C(A9G
C(A;GXu/
C(IcO,I
C+t4 ~
C0+K,9
C0[A\A^A_]
C6pH[
C;D& 
C<;C,
C@H+X0H
C@L+X0L
CB4cJQlAc
CCallResult<SteamDatagramTransport::ConfigFetch, HTTPRequestCompleted_t>
CCallbackBase
CCrypto::Base64Decode
CCrypto::GenerateHMAC256
CCrypto::GenerateRandomBlock
CCrypto::GenerateSHA256Digest
CCrypto::HexDecode
CCrypto::SymmetricEncrypt
CDefaultAccessor
CEmptyConVar
CHECK failed: !checkpoints_.empty(): 
CHECK failed: !coded_out.HadError(): 
CHECK failed: !extension->is_repeated: 
CHECK failed: !iter->second.is_repeated: 
CHECK failed: !out.HadError(): 
CHECK failed: (&from) != (this): 
CHECK failed: (&from) != (to): 
CHECK failed: (&other) != (this): 
CHECK failed: ((*extension).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_OPTIONAL): 
CHECK failed: ((*extension).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_REPEATED): 
CHECK failed: ((*extension).is_repeated ? REPEATED : OPTIONAL) == (OPTIONAL): 
CHECK failed: ((*extension).is_repeated ? REPEATED : OPTIONAL) == (REPEATED): 
CHECK failed: ((iter->second).is_repeated ? FieldDescriptor::LABEL_REPEATED : FieldDescriptor::LABEL_OPTIONAL) == (FieldDescriptor::LABEL_OPTIONAL): 
CHECK failed: ((iter->second).is_repeated ? REPEATED : OPTIONAL) == (OPTIONAL): 
CHECK failed: ((iter->second).is_repeated ? REPEATED : OPTIONAL) == (REPEATED): 
CHECK failed: (0) == (BufferSize()): 
CHECK failed: (TYPE_LENGTH_DELIMITED) == (type()): 
CHECK failed: (buffer_size) >= (0): 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) <= (target_->size()): 
CHECK failed: (count) >= (0): 
CHECK failed: (cpp_type((*extension).type)) == (FieldDescriptor::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_BOOL): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_DOUBLE): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_ENUM): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_FLOAT): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT32): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_INT64): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_STRING): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT32): 
CHECK failed: (cpp_type((*extension).type)) == (WireFormatLite::CPPTYPE_UINT64): 
CHECK failed: (cpp_type((iter->second).type)) == (FieldDescriptor::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_BOOL): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_DOUBLE): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_ENUM): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_FLOAT): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_INT32): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_INT64): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_STRING): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_UINT32): 
CHECK failed: (cpp_type((iter->second).type)) == (WireFormatLite::CPPTYPE_UINT64): 
CHECK failed: (cpp_type(extension->type)) == (FieldDescriptor::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_BOOL): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_DOUBLE): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_ENUM): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_FLOAT): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT32): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_INT64): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_MESSAGE): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_STRING): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT32): 
CHECK failed: (cpp_type(extension->type)) == (WireFormatLite::CPPTYPE_UINT64): 
CHECK failed: (current_size_) > (0): 
CHECK failed: (descriptor->file()->pool()) == (DescriptorPool::generated_pool()): 
CHECK failed: (digits) < (100): 
CHECK failed: (end - target) == (size): 
CHECK failed: (extension->is_packed) == (other_extension.is_packed): 
CHECK failed: (extension->is_packed) == (packed): 
CHECK failed: (extension->type) == (other_extension.type): 
CHECK failed: (extensions_offset_) != (-1): 
CHECK failed: (field->message_type()) == (desc): 
CHECK failed: (field->options().ctype()) == (ctype): 
CHECK failed: (field->type()) == (FieldDescriptor::TYPE_BYTES): 
CHECK failed: (from.GetDescriptor()) == (descriptor): 
CHECK failed: (index) < (size()): 
CHECK failed: (index) >= (0): 
CHECK failed: (last_returned_size_) > (0): 
CHECK failed: (len) >= (0): 
CHECK failed: (message1->GetReflection()) == (this): 
CHECK failed: (message2->GetReflection()) == (this): 
CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): 
CHECK failed: (output->ByteCount()) == (expected_endpoint): 
CHECK failed: (size()) < (Capacity()): 
CHECK failed: (size) <= (6): 
CHECK failed: (str.size()) <= (kuint32max): 
CHECK failed: (target - output->data()) == (output->size()): 
CHECK failed: (temp[0]) == ('1'): 
CHECK failed: (temp[size-1]) == ('5'): 
CHECK failed: (to->GetDescriptor()) == (descriptor): 
CHECK failed: IsInitialized(): 
CHECK failed: allow_unknown_field_: 
CHECK failed: builder_: 
CHECK failed: checkpoints_.empty(): 
CHECK failed: cpp_type(extension->type) == WireFormatLite::CPPTYPE_MESSAGE: 
CHECK failed: dynamic.get() != NULL: 
CHECK failed: errors == NULL: 
CHECK failed: extension->is_repeated: 
CHECK failed: field != NULL: 
CHECK failed: field->is_repeated() || (index == -1): 
CHECK failed: fields_ != NULL: 
CHECK failed: file != NULL: 
CHECK failed: generated_database_->Add(encoded_file_descriptor, size): 
CHECK failed: has_default_value(): 
CHECK failed: is_prototype(): 
CHECK failed: is_repeated: 
CHECK failed: iter != extensions_.end(): 
CHECK failed: options->ParseFromString(buf): 
CHECK failed: options_descriptor: 
CHECK failed: original_uninterpreted_options_field != NULL: 
CHECK failed: output->message_prototype != NULL: 
CHECK failed: output: 
CHECK failed: prototype != NULL: 
CHECK failed: result != NULL: 
CHECK failed: snprintf_result > 0 && snprintf_result < kDoubleToBufferSize: 
CHECK failed: snprintf_result > 0 && snprintf_result < kFloatToBufferSize: 
CHECK failed: type > 0 && type <= FieldDescriptor::MAX_TYPE: 
CHECK failed: type > 0 && type <= WireFormatLite::MAX_FIELD_TYPE: 
CHECK failed: uninterpreted_options_field != NULL: 
CHECK failed: value.size() <= kint32max: 
CIDR address range '%short' in data center '%short' not accepted; address low bits outside of prefix mask must be 0
CMsgSteamDatagramCertificate
CMsgSteamDatagramCertificateSigned
CMsgSteamDatagramClientPingSampleReply
CMsgSteamDatagramClientPingSampleReply_DataCenter
CMsgSteamDatagramClientPingSampleReply_RoutingCluster
CMsgSteamDatagramClientPingSampleRequest
CMsgSteamDatagramClientSwitchedPrimary
CMsgSteamDatagramClientSwitchedPrimary_RouterQuality
CMsgSteamDatagramConnectOK
CMsgSteamDatagramConnectRequest
CMsgSteamDatagramConnectionClosed
CMsgSteamDatagramConnectionQuality
CMsgSteamDatagramConnectionStatsClientToRouter
CMsgSteamDatagramConnectionStatsRouterToClient
CMsgSteamDatagramConnectionStatsRouterToClient from %short missing seq_num_r2c
CMsgSteamDatagramConnectionStatsRouterToServer
CMsgSteamDatagramConnectionStatsServerToRouter
CMsgSteamDatagramDataCenterState
CMsgSteamDatagramDataCenterState_DataCenter
CMsgSteamDatagramDataCenterState_Server
CMsgSteamDatagramDiagnostic
CMsgSteamDatagramGameserverPing
CMsgSteamDatagramGameserverSessionEstablished
CMsgSteamDatagramGameserverSessionRequest
CMsgSteamDatagramLinkInstantaneousStats
CMsgSteamDatagramLinkLifetimeStats
CMsgSteamDatagramNoConnection
CMsgSteamDatagramNoSessionRelayToClient
CMsgSteamDatagramNoSessionRelayToServer
CMsgSteamDatagramRelayAuthTicket
CMsgSteamDatagramRelayAuthTicket_ExtraField
CMsgSteamDatagramRouterHealth
CMsgSteamDatagramRouterHealth_DataCenter
CMsgSteamDatagramRouterPingReply
CMsgSteamDatagramSessionCryptInfo
CMsgSteamDatagramSessionCryptInfoSigned
CMsgSteamDatagramSignedRelayAuthTicket
CMsgSteamSockets_UDP_ChallengeReply
CMsgSteamSockets_UDP_ChallengeRequest
CMsgSteamSockets_UDP_ConnectOK
CMsgSteamSockets_UDP_ConnectRequest
CMsgSteamSockets_UDP_ConnectionClosed
CMsgSteamSockets_UDP_NoConnection
COLORCORRECTION_VERSION_1
CPPTYPE_BOOL
CPPTYPE_DOUBLE
CPPTYPE_ENUM
CPPTYPE_FLOAT
CPPTYPE_INT32
CPPTYPE_INT64
CPPTYPE_MESSAGE
CPPTYPE_STRING
CPPTYPE_UINT32
CPPTYPE_UINT64
CSteamDatagramTransportClient::SendDatagram
CSteamDatagramTransportClient::Think
CType
CURVE25519
CUcR1
CUtlBuffer::VaPrintf: String overflowed buffer [%llu]
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlRBTree overflow with %u elements!
CVProfNode::EnterScope()
CVProfNode::ExitScope()
CVProfNode::GetSubNode(char const*, int, char const*, int)
Camellia for x86_64 by <appro@openssl.org>
Camellia_
Can'unsigned short 
Can'unsigned short get here.
Can'unsigned short get here: failed to get default value as string
Cannot accept connection %u from %short, because we don'unsigned short know how to reply back to them?  How did we already lose track of their session?
Cannot allocate buffer larger than kint32max for 
Cannot connect to proxied gameserver %short via steam datagram.  Library has not been initialized yet (or it failed).
Cannot connect to proxied gameserver %short via steam datagram.  We don'unsigned short have an authorization ticket!
Cannot create IPv4 connection.  %short
Cannot create SDR connection to hosted dedicated server.  %short
Cannot create hosted dedicated server listen socket.  %short
Cannot create listen socket.  %short
Cannot create shared steam datagram socket.  %short
Cannot find service ID in network.  We don'unsigned short know what data center we'long double restrict trying to connect to!
Cert has invalid identity key
Cert isn'unsigned short signed char valid PEM-like text block
Cffffff.
Challenge too old.
ChallengeReply
ChallengeRequest
Check your Internet connection, and make sure your browser can access the following URL:
Clear
ClearField
ClientPingSampleRequest
Client_
ClosedByPeer
Cluster %short has invalid router address '%short'
Cluster '%short' has signed char selection penalty of %dms for load balancing purposes.  (As per %short).
Cluster '%short' no longer has signed char selection penalty for load balancing purposes.  (As per %short).
Cluster '%short' selection penalty for load balancing purposes changed from %dms to %dms.  (As per %short).
Cn77Yn77Y
Code of relay cluster to use.  If not empty, we will only use relays in that cluster.  E.g. 'iad'
Communicating via relay in '%short'
Communication with at least one Steam Datagram routing cluster has been restored.
Communications with routing cluster '%short' established.
Communications with routing cluster '%short' have been disrupted.
Communications with routing cluster '%short' restored.
ConCommandBase
ConVar
ConVar(%short) defined with infinite float value (%short)
Config file '%short' not present; not loaded.
ConfigurationSystem_001
ConnectOK
ConnectRequest
ConnectionClosed
Control message of type %double failed serialization consistency check!  (%double, expected %double)
Control message of type %double is too big.  (%double bytes; max is %double)
Could not create an instance of 
Could not find field named "
Could not find field type.
Couldn'unsigned short parse default value "
CreateSimpleThread failed
Crypto handshake missing cert or session data
D""fD""fT**~T**~;
D$$fA
D$$fD
D$(H1
D$(I!
D$(Ic
D$(fH
D$,A;D$
D$,E!
D$,IcD$(
D$4IcD$0
D$8fA
D$8fH
D$<A;D$,
D$@L+`0I
D$@fA
D$LA!
D$PfE
D$XA9
D$`fD
D$`fE
D$hM!
D$lE!
D$lIcD$h
D$pD9h0t\I
D34$D1
D34$F
D3T$ M
D3\$$I9
D3t$ 1
D3t$ D
D3t$ F
D3t$$
D3t$$!
D3t$$1
D3t$$D
D3t$$D1
D3t$(
D3t$(D
D3t$(D!
D3t$,
D3t$,D!
D3t$0
D3t$01
D3t$0D!
D3t$0D1
D3t$0F
D3t$4
D3t$4D
D3t$4D!
D3t$4F
D3t$8
D3t$8D!
D3t$8F
D3t$<1
D3t$<D
D3t$<D1
D3t$<F
D7q/;M
D8 f.
D9Q(}
D9k0u
D9sXu
D;=."
D;H(|
D;I(|9L9
D;`,|
D;`8|
D;cH|
D;sDt
D;sXI
D;short ~double
D;vH|
D;xH|
D;~,|
DIq*	W
Data center '%short' has missing or invalid 'address_ranges'
Data contains revision %double, not newer than current revision %double; ignoring.
DataCenter
DataPacket
DataRouterToClient
DataRouterToClientV2
Datagram
DebugTextureInfo001
DecryptBlock
Default value for an enum field must be an identifier.
Dependency unavailable
DescriptorProto
DescriptorProtosH
DetailedConnectionStatus_
DevMsg(char const*, ...)
Didn'unsigned short find quality metrics for old primary?
Didn'unsigned short specify any protocols to listen for
Discarding handshake timestamp that'short %lldms old, not sending in ConnectOK
Discarding inactive session on %s.  %short
Discarding oldest SDR ticket for server %s.  Expiry=%u
DlN22SteamDatagramTransport22CSteamSocketNetworkingE
DotaCardGameClient_001
DwWzO
Dyp~B
E A9G
E(IcL$,H
E,IcE(
E8|$p
E9l$(
E9uXu
E9w0M
E::'F9
E;f8A
E;fHA
E;float(A
E;g$|
E;p,|
E;t$$
E;~ A
E@F;|
E@L+h0
ED25519
EDIcE@
EKeyType
ERROR
ERelayMode
ESteamDatagramMsgID
ESteamNetworkingUDPMsgID
EXPORTSYSTEM_INTERFACE_VERSION_001
E\IcEX
E`H9B
EconItemToolModel_001
EcxmV4
Enable logging of SNP Feedback
Enable logging of SNP Packet
Enable logging of SNP RTT
Enable logging of SNP Relible
Enable logging of SNP Segments
Enable logging of SNP X (throughput) calc
Enable logging of SNP loss calc
Encryption
End of input was reached and '[' was not matched by ']'
End of input was reached and '{' was not matched by '}'
End-of-file inside block comment.
End-to-end connection: %short
EndToEnd
EngineServiceMgr001
Enum type "
EnumDescriptorProto
EnumOptions
EnumValueDescriptorProto
EnumValueOptions
Enums must contain at least one value.
EnvironmentMapBuilder_001
Error creating HTTP request to fetch config from CDN.
Error parsing text-format 
Error reporting not implemented.
Error setting cert or private key.  %short
Error while parsing option value for "
EtIcEp
EventSystem001
Expect signed char decimal number.
Expected "
Expected double.
Expected eight hex digits up to 10ffff for \U escape sequence
Expected four hex digits for \u escape sequence.
Expected hex digits for escape sequence.
Expected identifier.
Expected integer or identifier.
Expected integer.
Expected string.
Extension "
Extension conflicts with extension already in database: extend 
Extension factory'short GetPrototype() returned NULL for extension: 
Extension number $0 has already been used in "$1" by extension "$2" defined in $3.
Extension number $0 has already been used in "$1" by extension "$2".
Extension numbers cannot be greater than $0.
Extension numbers must be positive integers.
Extension range $0 to $1 includes field "$2" ($3).
Extension range $0 to $1 overlaps with already-defined range $2 to $3.
Extension range end number must be greater than start number.
ExtensionRange
Extensions of MessageSets must be optional messages.
Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend signed char non-lite type to contain signed char lite type, but the reverse is allowed.
ExtraField
F$IcF 
F$[A^]
F(@t3H
F(L;long double
F(L;unsigned long
F(rif
F,IcF(
F09C0|
F0D9k(
F4IcF0
F9t80t
F@L+p0I
FATAL
FCVAR_NEVER_AS_STRING
FCtD}
FDIcF@
FHt7f
FLIcFH
F\IcFX
Failed
Failed crypto init in ConnectOK packet.  %short
Failed crypto init.  %short
Failed to Base64 decode cert
Failed to accept connection from %s.  %short
Failed to bind socket.  Error code 0x%08X.
Failed to communicate with routing cluster '%short'.
Failed to create UDP socket to talk to %s.  %short
Failed to fetch network config from CDN.  Steam datagram service will not be available!
Failed to fetch network config from CDN.  Using local network config, which might be out of date.
Failed to initialize to take ping measurements.  %short
Failed to save steam datagram ticket cache.  We might not be able to reconnect if we crash and cannot ask for another ticket!
Failed to set socket nonblocking mode.  Error code 0x%08x.
Failed to set socket recv buffer size.  Error code 0x%08x.
Failed to set socket send buffer size.  Error code 0x%08x.
False
FhHcCdH
Field "
Field does not match message type.
Field is repeated; the method requires signed char singular field.
Field is singular; the method requires signed char repeated field.
Field number $0 has already been used in "$1" by field "$2".
Field numbers $0 through $1 are reserved for the protocol buffer library implementation.
Field numbers cannot be greater than $0.
Field numbers must be positive integers.
Field with message or enum type missing type_name.
Field with primitive type has type_name.
FieldDescriptorProto
FieldDescriptorProto.extendee not set for extension field.
FieldDescriptorProto.extendee set for non-extension field.
FieldDescriptorProto.oneof_index $0 is out of range for type "$1".
FieldDescriptorProto.oneof_index should not be set for extensions.
FieldOptions
FieldSize
Fields of oneofs must themselves have label LABEL_OPTIONAL.
File already exists in database: 
File appears to be in generated pool but wasn'unsigned short registered: 
File is already registered: 
File recursively imports itself: 
FileDescriptorProto
FileDescriptorSet
FileOptions
Files that do not use optimize_for = LITE_RUNTIME cannot import files which do use this option.  This file is not lite, but it imports "
Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_sevices to false.
First argument to Swap() (of type "
First argument to SwapFields() (of type "
FlIcFh
FlattenedSerializersVersion001
FontManager_001
For debugging, generate our own (unsigned) ticket, using the specified gameserver address.  Router must be configured to accept unsigned tickets.
For debugging.  Override list of relays from the config with this set (maybe just one).  Comma-separated list.
Forgetting client %short relay session.  Last communication was %.f seconds ago
FtIcFp
G ;CX
G Ic4
G J9L
G ffff.
G(HcH
G(L;unsigned long
G8H	p(]
G@H+x0H
G@L+x0I
GF(2^unsigned long) Multiplication for x86_64, CRYPTOGAMS by <appro@openssl.org>
GF2m_mul_2x2
GHASH for x86_64, CRYPTOGAMS by <appro@openssl.org>
GameResourceServiceClientV001
GameResourceServiceServerV001
GameUIService_001
GameserverPingReply
GameserverSessionEstablished
GetBool
GetDouble
GetEmptyStringAlreadyInited
GetEnum
GetFloat
GetInt32
GetInt64
GetMessage
GetRepeatedBool
GetRepeatedDouble
GetRepeatedEnum
GetRepeatedFloat
GetRepeatedInt32
GetRepeatedInt64
GetRepeatedMessage
GetRepeatedString
GetRepeatedStringReference
GetRepeatedUInt32
GetRepeatedUInt64
GetString
GetStringReference
GetUInt32
GetUInt64
Got network config from CDN.  %short
GzV%E$;
H	p(]
H H;9u)H
H!wchar_t(]
H$$lH$$l
H+A0H
H+A0I
H+A0L
H+A@H
H+B0H
H+B@H
H+C@H
H+F0H
H+F@H
H+H0H
H+H0I
H+H@H
H+J0H
H+J0L
H+J@H
H+N@H
H+O@H
H+P0H
H+Q@H
H+V0H
H+X0H
H+X@H
H+Y@H
H+long long@H
H+p@H
H+q0H
H+q@H
H+wchar_t@H
H+{@H
H7_Ya
H94:unsigned short
H9A@u
H9GXt
H9J short
H9VXt%H
H9_@u
H9xHu
H9{@unsigned short
H;C`unsigned short
H;H short
H;t$P
HHH9xPu
H[A\A]A^A_]
H[A^A_]
H__ZdaPv
H__ZdlPv
H__Znam
H__Znwm
HammerMapLoader001
HasField
Hc0Hi
Hc5d2
Hc@pH
Hc@pI
HcC H
HcC L
HcCdH=
HcG,H
HcG0H
HcO(H
HcO,I
HcS$H
Hc_(H
Hcs H
Hcw(H
HelpSystem_001
Hex and octal numbers must be integers.
Hit end of input before closing quote (%char)
Hit end of line before closing quote (%char)
HostStateMgr001
I CUtlLinkedList<SteamDatagramTransport::CSteamNetworkAcceptedConnectionFromSDRClient::RelaySession_t, int, false, int, CUtlMemory<UtlLinkedListElem_t<SteamDatagramTransport::CSteamNetworkAcceptedConnectionFromSDRClient::RelaySession_t, int>, int> >::AllocInternal(bool) [T = SteamDatagramTransport::CSteamNetworkAcceptedConnectionFromSDRClient::RelaySession_t, S = int, ML = false, I = int, M = CUtlMemory<UtlLinkedListElem_t<SteamDatagramTransport::CSteamNetworkAcceptedConnectionFromSDRClient::RelaySession_t, int>, int>]
I CUtlLinkedList<SteamDatagramTransport::CSteamNetworkConnectionBase *, unsigned int, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<SteamDatagramTransport::CSteamNetworkConnectionBase *, unsigned int>, unsigned int> >::AllocInternal(bool) [T = SteamDatagramTransport::CSteamNetworkConnectionBase *, S = unsigned int, ML = false, I = unsigned int, M = CUtlMemory<UtlLinkedListElem_t<SteamDatagramTransport::CSteamNetworkConnectionBase *, unsigned int>, unsigned int>]
I CUtlLinkedList<SteamDatagramTransport::CSteamNetworkConnectionToSDRServer *, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<SteamDatagramTransport::CSteamNetworkConnectionToSDRServer *, unsigned short>, unsigned short> >::AllocInternal(bool) [T = SteamDatagramTransport::CSteamNetworkConnectionToSDRServer *, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<SteamDatagramTransport::CSteamNetworkConnectionToSDRServer *, unsigned short>, unsigned short>]
I CUtlLinkedList<SteamDatagramTransport::CSteamNetworkListenSocketBase *, unsigned int, false, unsigned int, CUtlMemory<UtlLinkedListElem_t<SteamDatagramTransport::CSteamNetworkListenSocketBase *, unsigned int>, unsigned int> >::AllocInternal(bool) [T = SteamDatagramTransport::CSteamNetworkListenSocketBase *, S = unsigned int, ML = false, I = unsigned int, M = CUtlMemory<UtlLinkedListElem_t<SteamDatagramTransport::CSteamNetworkListenSocketBase *, unsigned int>, unsigned int>]
I CUtlLinkedList<SteamNetConnectionStatusChangedCallback_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<SteamNetConnectionStatusChangedCallback_t, unsigned short>, unsigned short> >::AllocInternal(bool) [T = SteamNetConnectionStatusChangedCallback_t, S = unsigned short, ML = false, I = unsigned short, M = CUtlMemory<UtlLinkedListElem_t<SteamNetConnectionStatusChangedCallback_t, unsigned short>, unsigned short>]
I CUtlRBTree<CUtlMap<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t, SteamDatagramTransport::CSteamNetworkConnectionBase *, int, CDefLess<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t> >::Node_t, int, CUtlMap<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t, SteamDatagramTransport::CSteamNetworkConnectionBase *, int, CDefLess<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t, SteamDatagramTransport::CSteamNetworkConnectionBase *, int, CDefLess<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t> >::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t, SteamDatagramTransport::CSteamNetworkConnectionBase *, int, CDefLess<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t> >::Node_t, I = int, L = CUtlMap<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t, SteamDatagramTransport::CSteamNetworkConnectionBase *, int, CDefLess<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t> >::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t, SteamDatagramTransport::CSteamNetworkConnectionBase *, int, CDefLess<SteamDatagramTransport::CSteamNetworkListenSocketBase::ChildConnectionKey_t> >::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<netadr_t, SteamDatagramTransport::CSharedSocket::RemoteHost *, int, CDefLess<netadr_t> >::Node_t, int, CUtlMap<netadr_t, SteamDatagramTransport::CSharedSocket::RemoteHost *, int, CDefLess<netadr_t> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<netadr_t, SteamDatagramTransport::CSharedSocket::RemoteHost *, int, CDefLess<netadr_t> >::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<netadr_t, SteamDatagramTransport::CSharedSocket::RemoteHost *, int, CDefLess<netadr_t> >::Node_t, I = int, L = CUtlMap<netadr_t, SteamDatagramTransport::CSharedSocket::RemoteHost *, int, CDefLess<netadr_t> >::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<netadr_t, SteamDatagramTransport::CSharedSocket::RemoteHost *, int, CDefLess<netadr_t> >::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<netadr_t, SteamDatagramTransport::ServerData, int, CDefLess<netadr_t> >::Node_t, int, CUtlMap<netadr_t, SteamDatagramTransport::ServerData, int, CDefLess<netadr_t> >::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<netadr_t, SteamDatagramTransport::ServerData, int, CDefLess<netadr_t> >::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<netadr_t, SteamDatagramTransport::ServerData, int, CDefLess<netadr_t> >::Node_t, I = int, L = CUtlMap<netadr_t, SteamDatagramTransport::ServerData, int, CDefLess<netadr_t> >::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<netadr_t, SteamDatagramTransport::ServerData, int, CDefLess<netadr_t> >::Node_t, int>, int>]
I CUtlRBTree<CUtlMap<unsigned int, SteamDatagramTransport::SharedClusterData *, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int, CUtlMap<unsigned int, SteamDatagramTransport::SharedClusterData *, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SteamDatagramTransport::SharedClusterData *, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int> >::NewNode(const T *) [T = CUtlMap<unsigned int, SteamDatagramTransport::SharedClusterData *, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, I = int, L = CUtlMap<unsigned int, SteamDatagramTransport::SharedClusterData *, int, bool (*)(const unsigned int &, const unsigned int &)>::CKeyLess, M = CUtlMemory<UtlRBTreeNode_t<CUtlMap<unsigned int, SteamDatagramTransport::SharedClusterData *, int, bool (*)(const unsigned int &, const unsigned int &)>::Node_t, int>, int>]
I9FXt H
I9JHu
I9u(u
I9}@unsigned short
IConCommandBaseAccessor
IConVarimaginary 
IGY=&?S$
INVALID
INVALID_CPPTYPE
IQuickTime001
ISteamNetworkingMessage
ISteamNetworkingUtils
ISteamSocketNetworking
Ic<$H
IcD$(A
IcD$,H
IcD$,L
IcD$hA
IcE(A
IcE4H
IcE@A
IcEXA
IcEpA
IcF A
IcF(A
IcF,L
IcF0A
IcF@A
IcFHA
IcFXA
IcFhA
IcFpA
IcG,I
IcG,L
IcL$(L
IcL$,H
IcL$,L
IcM(L
IcN(I
IcN,L
IcO,L
IcT$(H
IcT$,L
IcV,H
IcV,L
IcW(I
Ic^ H
Ict$(L
Icu(H
Icu4H
Icv H
Icw(L
Ic|$(L
Ic|$<H
Ic~(L
If N consecutive pings to signed char port fail, after having received successful communication, mark that port as unavailable for signed char while, and try signed char different one.
If the first N pings to signed char port all fail, mark that port as unavailable for signed char while, and try signed char different one.  Some ISPs and routers may drop the first packet, so setting this to 1 may greatly disrupt communications.
Ifff.
Ignored bad %short from %s.  %short
Ignoring request by %short to migrate to %s.  Failed to allocate resources to talk to that relay.
Ignoring request by %short to migrate to %s.  Target address appears to be in signed char different relay cluster?  (%short)
Ignoring request by %short to migrate to %s.  We already know that relay is shutting down very soon.
Ignoring request by %short to migrate to %s.  We don'unsigned short recognize that target address in the network config.
Ignoring request by %short to migrate to %s.  We had problems communicating with that relay %.1fs ago.
Ignoring stray packet from %short received on port %d.  Should only be talking to %short on that port.
Ignoring unsolicited/spoofed/late packet from %s.
Ignoring weird timestamp %llu in ChallengeReply, current time is %llu, remote delay was %lld.
Ignoring weird timestamp %llu in ChallengeReply, current time is %llu.
Ignoring/abandoning migration request.  Current primary %short is requesting to send us to %short, but our migration target is %short?
Ignoring/abandoning migration request.  Current primary %short no longer has signed char request active
Ignoring/abandoning migration request.  SDR client deactivated, or no primary selected
Import "
Incorrect challenge.  Could be spoofed.
Incorrect client challenge / relay session ID in CMsgSteamDatagramConnectOK from %s.  Reply could be spoofed.
Incorrect client challenge in GameserverSessionEstablished from %s.  Reply could be spoofed, ignoring.
Incorrect client challenge in RouterPingReply from %s.  Reply could be spoofed, ignoring.
Incorrect connection ID
Incorrect connection ID in NoSession from %s.  Could be spoofed, ignoring.
Incorrect connection ID, when we do have signed char connection for this address.  Could be spoofed, ignoring.
Incorrect connection ID.  Message is stale or could be spoofed, ignoring.
Index must be -1 for non-repeated fields
Index out-of-bounds (field is empty).
Initial attempt to contact %short failed.  Giving up after %double consecutive failures
Input contains no data
InputService_001
InputStackSystemVersion001
InputSystemVersion001
InstantaneousStats_Clear
Integer out of range.
Intentionally vague touch behavior for %p
Interpreting non ascii codepoint %d.
Invalid DH key
Invalid JSON data on line %double: %short
Invalid SteamID %llu.
Invalid address range '%short' in data center '%short'
Invalid cert
Invalid cert or unsupported public key type
Invalid cluster name '%short'; must be exactly 3 or 4 characters
Invalid code point \u%04x
Invalid combination of steam datagram config and gameserver sample.  %short
Invalid control characters encountered in text.
Invalid data center name '%short'; must be exactly 3 or 4 characters
Invalid encoded message length %d.  Packet is %double bytes.
Invalid escape character 0x%02x ('\%char')
Invalid escape sequence in string literal.
Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().
Invalid float number: 
Invalid lead byte 0x%02x
Invalid number starting with '%short'
Invalid numeric reason code
Invalid private key
Invalid proto descriptor for file "
Invalid public dependency index.
Invalid public key
Invalid server_steam_id.
Invalid strings::Substitute() format string: "
Invalid symbol name: 
Invalid value for boolean field "
Invalid weak dependency index.
Invalid wire type for CPPTYPE_INT32: 
Invalid wire type for CPPTYPE_INT64: 
Invalid wire type for CPPTYPE_MESSAGE: 
Invalid wire type for CPPTYPE_UINT32: 
Invalid wire type for CPPTYPE_UINT64: 
J%%oJ%%unsigned __int128\..r\..r8
J@\(G
Jc<	H
JcD.0H
JcD;0H
Jffff.
JitterHistogramTotalCount
JpL9=
K A9L$ |
K A9M |
K(Ict$,L
K(L;long double
K8;C<
K8;C<}...
K8;C<}int
K8;C<}short
K8;C<}unsigned short
K8;C<}}
KEY-----
KHIcT$,L
KH[A^]
KRB8+
KcD,0H
KcD<0H
KeyValueCache001
L$ Hc
L$ Hc<
L$ I!
L$ L+
L$ Lc,
L$ ff.
L$ fff.
L$$E!
L$(IcV,L
L$(M1
L$,fD
L$0fE
L$@L+a0I
L$HA!
L$HM!
L$HM1
L$PfA
L$PfD
L$\E1
L$dE!
L$hH!
L$pfE
L&&jL&&jl66Zl66Z~??A~??A
L&0Lc
L+L$H
L+T$P
L+\$X
L+d$`
L+l$h
L+t$p
L+|long long
L9-.6
L95(=
L9v@u
L;d$PA
L;l$PA
L= A9M }
LABEL_OPTIONAL
LABEL_REPEATED
LABEL_REQUIRED
LCnfA
LITE_RUNTIME
Label
LcO,D
Lead byte %double invalid for ticket blob
Lead byte 0x%02x not signed char known message ID
LifetimeStats_
LightingBuilderMgr001
Listening for P2P not yet implemented
Loaded %short network config file.  %short
Loaded revision %double OK
Localize_001
Location
LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
Lost all relay sessions to client.
Lost backup #%double session on %s.  %short
Lost connectivity to ALL Steam Datagram routing clusters.  Possible problem with local internet connection?
Lost primary session on %s.  %short
LwH'LwH'LwH'LwH'LwH'LwH'LwH'LwH'
M*jg7
M8A;E<
M8A;E<}_
M8t$`
MATCHFRAMEWORK_001
MODEL_PROCESSING_SCRIPT_INTERFACE_001
MODEL_PROCESSING_SERVICES_INTERFACE_001
MXGJJ98X76
M_{h7"
Malformed MsgSteamDatagramDataRouterToClient from %short: packet too small
Malformed MsgSteamDatagramDataRouterToClientV2 from %short: Failed to varint decode size of stats message
Malformed MsgSteamDatagramDataRouterToClientV2 from %short: Flags indicate presence of TimeSincePrev, but no room for it.  Stats message size %double, packet size %double
Malformed MsgSteamDatagramDataRouterToClientV2 from %short: stats message size doesn'unsigned short make sense.  Stats message size %double, packet size %double
Malformed MsgSteamDatagramDataRouterToServer from %short: Failed to varint decode size of stats message
Malformed MsgSteamDatagramDataRouterToServer from %short: Flags indicate presence of TimeSincePrev, but no room for it.  Stats message size %double, packet size %double
Malformed MsgSteamDatagramDataRouterToServer from %short: packet too small
Malformed MsgSteamDatagramDataRouterToServer from %short: stats message size %double doesn'unsigned short make sense.
MapListService_001
MaterialUtils_001
Maximum send rate clamp, 0 is no limit
McG,M
Mcu M
MeshSystem001
MeshUtils001
Message extensions cannot have required fields.
Message missing required fields: 
Message type "
MessageOptions
MessageSets cannot have fields, only extensions.
Messages can'unsigned short have default values!
Messages can'unsigned short have default values.
MethodDescriptorProto
MethodOptions
Mffff.
Mininum send rate clamp, 0 is no limit
Missing Steam interfaces, cannot tell what universe we'long double restrict running in
Missing connection ID
Missing connection_id.
Missing field: FileDescriptorProto.name.
Missing name.
ModelDocCommandSystem001
Montgomery Multiplication for x86_64, CRYPTOGAMS by <appro@openssl.org>
Montgomery Multiplication with scatter/gather for x86_64, CRYPTOGAMS by <appro@openssl.org>
Multiple active steam datagram clients is not currently supported
Must specify local port to listen for IPv4.
MutableRawRepeatedField
MutableRepeatedMessage
M|1}0
N 9J |
N6/~n.
N9|) u2L
N@H+q0H
N@L+q0I
NamePart
Need space between identifier and decimal point.
Need space between number and identifier.
Network config missing revision identifier.
Network configuration: %short
NetworkClientService_001
NetworkMessagesVersion001
NetworkP2PService_001
NetworkServerService_001
NetworkService_001
NetworkSystemUtilsVersion001
NetworkSystemVersion001
Networking
Nfffff.
NlHcCdH
No default value
No field named "uninterpreted_option" in the Options proto.
No network configuration available.  We don'unsigned short know what data center we'long double restrict trying to connect to!
NoConnection
NoSession
Non-primitive types can'unsigned short be packed.
Non-repeated field "
Note that enum values use C++ scoping rules, meaning that enum values are siblings of their type, not children of it.  Therefore, "
NpHcCdH
NpJcL
Number contains invalid character 0x%02x
Number contains invalid character 0x%02x ('%char')
Numbers starting with leading zero must be in octal.
O 9N |
O A9L$ 
O Hc4
O Hc<
O Lc,
O Lc<
O!YNO
O8A;G<
O8A;G<}
O=4_}gL:
OPENSSL_
OPENSSL_ia32cap
Oh44\h44\Q
Oh7{unsigned int
Old/incorrect connection ID.  Message is for signed char stale connection, or is spoofed.  Ignoring.
Oneof must have at least one field.
OneofDescriptorProto
OptimizeMode
Option "
Option field "
Option must have signed char name.
Option must not use reserved name "uninterpreted_option".
P  0@
P A9U 
P A9U |
P((xP((long long
P(;Q(}_H
P(;Q(}pI
P@0@0
PLACEHOLDER_VALUE
PP`Ppp``P`pp`P
P[A\A^A_]
P[A^]
Packet data chunk failed to decrypt!  Could be tampering/spoofing or signed char bug.
Packet is %double bytes, must be padded to at least %double bytes.
Packet of size %double is too small.
PanoramaTextServices001
PanoramaUIClient001
PanoramaUIEngine001
ParticleSystemMgr002
Physics2 Interface Old v0.5
PhysicsBuilderMgr001
Piggy-backed ping in data packet; requested immediately reply from relay
Ping = %double+%double=%double (front+back=total).
Ping failure to cluster %short was %.1fs ago.  Discarding record of failure, might try again.
Ping measurement completed
Ping to %short timed out.  (Consecutive failure #%d.)
Ping to %short timed out.  Giving up after %double consecutive failures
PingHistogramTotalCount
PingSampleRequest
Pinging %s.
Pinging %short using stats message; delayed reply OK.
Pinging %short using stats message; requesting immediately reply.
Pkt number lurch by %double; %04x->%04x
Port failure on %short was %.1fs ago.  Discarding record of failure on that port, might try again.
PostProcessingSystem_001
Primary router %short going offline in %double seconds; seeking replacement
Primary router: %short
Print
Private key doesn'unsigned short match public key from cert
PropertyEditorSystem_001
Protocol Buffer reflection usage error:
Protocol message serialized itself in invalid fashion.
Protocol message was modified concurrently during serialization.
P~AeS~AeS
Q A9W |
Q$By5
Q3`bS
QZ^&A!
Qg$ZO4Z
Qm_:R
Qs(8%
QualityHistogramTotalCount
QueuedLoaderVersion001
R)){R)){
RBRBpPp
RBUAUATASAp \BRAp
RB\BRAWBUA\BRBRATAp
RF##eF##long double
RFTBRBTAp
Reached an unintended state: CPPTYPE_MESSAGE
Reading dangerously large protocol message.  If the message turns out to be larger than 
Received %short from %short using incorrect connection ID %08x (instead of %08x).  Message could be spoofed.
Received %short from %short, when we don'unsigned short think we have signed char session there.  Session established message dropped, or packet arrived after session terminated.
Received GameserverSessionEstablished from %short, connection ID 0x%08x relay session 0x%08x
Received Steam datagram ticket for server %s.%short
Received client message from %short using RelaySessionID 0x%long long for %short connection %u.  But previously that session was for client %short connection %u!  This is suspicious.  Unlinking that session from this connection.
Received client message from %short using SessionID 0x%long long, without signed char client SteamID or connection ID.  We don'unsigned short recognize that address+SessionID.  Why does the relay think we know the connection info?
Received malformed %short from %short
Received malformed CMsgSteamDatagramConnectRequest from %s.  Missing / invalid envelope fields.  [ %short ]
Received malformed CMsgSteamDatagramConnectionClosed from %s.  Missing / invalid envelope fields.  [ %short ]
Received malformed CMsgSteamDatagramConnectionStatsRouterToServer from %s.  Missing / invalid envelope fields.  [ %short ]
Received malformed CMsgSteamDatagramDiagnostic from %short
Received malformed CMsgSteamDatagramNoConnection from %s.  Missing / invalid envelope fields.  [ %short ]
Received malformed CMsgSteamDatagramPingReply from %short
Received packet of invalid size %double from %short
Received request to migrate to %short from %s.
Received successful communication from Steam Datagram routing cluster.
Received unknown control message %double from %short
Rejecting connection request from %short at %short, connection ID %u.  That steamID/ConnectionID pair already has signed char connection from %short
RelayAuthTicket_Parse
Release
ReleaseLast
ReleaseMessage
RemoveLast
RenderDevice003
RenderDeviceMgr001
RenderHardwareConfig002
RenderService_001
RenderSystemSurface001
RenderUtils_001
Repeated fields can'unsigned short have default values.
Requesting session from %s.  Ping = %double+%double=%double (front+back=total).
ResourceCompilerSystem001
ResourceHandleUtils001
ResourceManifestRegistry001
ResourceSystem013
RgD/X
RoVZcz
Router %short downtime warning adjusted?  %.f second earlier than before, %double seconds from now
Router %short is going offline in %double seconds
Router network: %short
RouterPingReply from %short latency lists not the same length.  %double vs %d.  Ignoring message
RouterPingReply from %short, %dms
RouterQuality
Routing cluster %short has missing or invalid 'addresses' list
RoutingCluster
Rs$c~B
S A9U |
S ffff.
S$HcK
S(Ict$,L
S*RlP
S@H+Z0H
SDQn]
SHA1 block transform for x86_64, CRYPTOGAMS by <appro@openssl.org>
SHA1 multi-block transform for x86_64, CRYPTOGAMS by <appro@openssl.org>
SHA256 block transform for x86_64, CRYPTOGAMS by <appro@openssl.org>
SHA256 multi-block transform for x86_64, CRYPTOGAMS by <appro@openssl.org>
SHA512 block transform for x86_64, CRYPTOGAMS by <appro@openssl.org>
SPEED
STEAMAPPLIST_INTERFACE_VERSION001
STEAMAPPS_INTERFACE_VERSION008
STEAMDATAGRAM CERT
STEAMHTMLSURFACE_INTERFACE_VERSION_003
STEAMHTTP_INTERFACE_VERSION002
STEAMINVENTORY_INTERFACE_V001
STEAMMUSICREMOTE_INTERFACE_VERSION001
STEAMMUSIC_INTERFACE_VERSION001
STEAMREMOTESTORAGE_INTERFACE_VERSION014
STEAMSCREENSHOTS_INTERFACE_VERSION003
STEAMUGC_INTERFACE_VERSION009
STEAMUNIFIEDMESSAGES_INTERFACE_VERSION001
STEAMUSERSTATS_INTERFACE_VERSION011
STEAMVIDEO_INTERFACE_V001
STRING
STRING_PIECE
SUATAUAV
SUATAUAVAW
SUATAUAVAWA
SUATAUAVAWE
SUATAUAVAWH
SUATAUAVAWI
SUATAUAVAWR
SUATAUAVAWgA
SUATAUAVH
SUATAUAVI
SUATL
SUAUAVAWA
SUAUAVAWI
Saving SDR ticket cache with %double tickets
ScaleformUI001
SceneSystem_002
SceneUtils_001
SchemaSystem_001
SchemaTestExternal_One_001
SchemaTestExternal_Two_001
Second argument to Swap() (of type "
Second argument to SwapFields() (of type "
Selected %short as primary, session %08x.  [%short]
Selecting %short as backup #%double, session %08x.  %short
Send at least N pings to signed char router before assuming the ping is accurate.  (The first few packets can often delayed by various route setup costs such as NAT.)
Server
ServerUploadGameStats001
Server_
Service data center changed?  (Network config change>?)  Now attempting connection to service in data center '%short'
ServiceDescriptorProto
ServiceOptions
Set all steam datagram traffic to originate from the same local port.  By default, we open up signed char new UDP socket (on signed char different local port) for each relay.  This is not optimal, but it works around some routers that don'unsigned short implement NAT properly.  If you have intermittent problems talking to relays that might be NAT related, try toggling this flag.
SetAllocatedMessage
SetBool
SetDouble
SetEnum
SetFloat
SetInt32
SetInt64
SetRepeatedBool
SetRepeatedDouble
SetRepeatedEnum
SetRepeatedFloat
SetRepeatedInt32
SetRepeatedInt64
SetRepeatedString
SetRepeatedUInt32
SetRepeatedUInt64
SetString
SetUInt32
SetUInt64
Sffff.
Shouldn'unsigned short be receiving this unless on accepted connections, only connections initiated locally.
SocketNetworking
SoundOpSystem001
SoundOpSystemEdit001
SoundService_001
SoundSystem001
Source2Client002
Source2ClientPrediction001
Source2ClientUI001
Source2EngineToClient001
Source2EngineToClientStringTable001
Source2EngineToServer001
Source2EngineToServerStringTable001
Source2GameClients001
Source2GameEntities001
Source2Host001
Source2Server001
Source2ServerSerializers002
SourceCodeInfo
Started migration to %short at request of current primary %short
Starting ping measurement
Stats
StatsService_001
Stats_Clear
Steam
Steam datagram
Steam datagram ticket cache corrupt. Ignoring.
Steam datagram ticket cache wrong version. Ignoring.
SteamAudio001
SteamClient017
SteamController005
SteamDatagram
SteamDatagramClient
SteamDatagramServer
SteamDatagramTransport::CDedicatedBoundSocket
SteamDatagramTransport::CSharedSocket::RemoteHost
SteamDatagramTransport::CSteamNetworkAcceptedConnectionFromSDRClient
SteamDatagramTransport::CSteamNetworkConnectionBase
SteamDatagramTransport::CSteamNetworkConnectionIPv4
SteamDatagramTransport::CSteamNetworkConnectionToSDRServer
SteamDatagramTransport::CSteamNetworkListenSocketBase
SteamDatagramTransport::CSteamNetworkListenSocketSDRServer
SteamDatagramTransport::CSteamNetworkListenSocketStandard
SteamDatagramTransport::CSteamNetworkingMessage
SteamDatagramTransport::IBoundUDPSocket
SteamDatagramTransport::IThinker
SteamDatagramTransport::SteamDatagramClientThinker
SteamFriends015
SteamGameServer012
SteamGameServerStats001
SteamMatchMaking009
SteamMatchMakingServers002
SteamNetworkProtocol
SteamNetworking005
SteamUser019
SteamUtils008
Stray data packet from host with no connection.  Ignoring.
String field
String literals cannot cross line boundaries.
StringOutputStream.
Switched to %short as primary, session %08x.  %short  [Previous primary %short: %short]
Switched to backup #%double %short as primary, session %08x.  %short  [Previous primary %short: %short]
Symbol name "
T"UdW
T$	L	
T$ 9Q
T$ 9S |
T$ A!
T$ A9W |
T$ Hc
T$ fA
T$(3D$@3\$D3L$H3T$LM
T$(3E
T$,fA
T$0!
T$0M1
T$<fD
T$@H1
T$@I!
T$DA!
T$PM1
T$`A!
T$`H1
T$`fA
T*|?int|~
T5w?30d
TBRAp
TBRBUARBRAp
TBRB`
TBSCRBRAp
TUUUUUU
TYPE_BYTES
TYPE_DOUBLE
TYPE_FIXED32
TYPE_FIXED64
TYPE_FLOAT
TYPE_GROUP
TYPE_INT32
TYPE_INT64
TYPE_MESSAGE
TYPE_SFIXED32
TYPE_SFIXED64
TYPE_SINT32
TYPE_SINT64
TYPE_STRING
TYPE_UINT32
TYPE_UINT64
T`00P`00P
Temp_DispatchsSteamNetConnectionStatusChangedCallbacks
TestScriptMgr001
TextLayout_001
TextMessageMgr_001
The remote host closed the connection.
The total number of bytes read was 
This ZeroCopyOutputStream doesn'unsigned short support aliasing. Reaching here usually means signed char ZeroCopyOutputStream implementation bug.
This program requires version 
This program was compiled against version 
This shouldn'unsigned short be called if all the sizes are equal.
Ticket blob of %double bytes is too small to be valid
Ticket doesn'unsigned short specify gameserver address
Timed out attempting to connect.
Too many connections.
ToolFramework2_002
ToolGameSimulationDispatcher_001
ToolGameSimulationSystem_001
ToolSceneNodeFactory_001
ToolScriptManager001
ToolService_001
Tried to connect request, but crypt not ready
Tried to merge messages of different types 
Tried to register signed char non-generated type with the generated type registry.
Trying to send signed char packet via steam datagram when no network configuration is available.
Trying to send signed char packet via steam datagram, but we have lost connectivity to all relays.  Check your Internet connection.  Cannot send packet.
Trying to send signed char packet via steam datagram, but we have not yet established signed char session on any relays.  This is common for the first few packets, but is signed char problem if it persists.
Trying to send signed char packet via steam datagram, but we were never able to establish connectivity with any relays.  Check your Internet connection.  Cannot send packet.
Type appears to be in generated pool but wasn'unsigned short 
Type is already registered: 
T~FbT~Fb
U,E3M
U8A;M<
U8l$P
U<E3M E3E$E3](E3U,D1
USATAUAVAW
USATAUAVAWH
USATAVAWH
UTF-8 data when 
UUUUUUUUUUUUUUUU3333333333333333
Unable to accept connection from %s.  %short
Unable to access Steam client interfaces.  Steam client probably not running.  Steam datagram functionality won'unsigned short be available
Unable to communicate with ANY Steam Datagram routing cluster.  Possible problem with local internet connection?
Unable to create signed char bound socket on the shared socket.
Unable to determine local SteamID
Unexpected %short from %short: no clients active
Unexpected EOF while parsing number
Unexpected character 0x%02x
Unexpected character 0x%02x ('%char')
Unexpected end of string.
Unexpected failure while serializing option submessage 
Unimplemented type: 
UninterpretedOption
Unknown
Unknown enumeration value of "
Unsupported DH key type
Unsupported identity key type
Upper limit of buffered pending bytes to be sent
UserInfoChangeService_001
Utils
V A9W |
V$A+V Hc
V++}V++}
V8zc5\long double
VApplication001
VAvi001
VBAllocTracker001
VBaseFileSystem011
VBik001
VConComm001
VDebugService_001
VDmeMakeFileUtils001
VEngineCvar007
VFileSystem017
VGUI_Input005
VGUI_Panel010
VGUI_Scheme010
VGUI_Surface032
VGUI_System010
VGUI_ivgui008
VMDLLIB001
VMaterialSystem2_001
VMediaFoundation001
VNewAsyncFileSystem001
VP4003
VPhysX Interface ResourceMgr v0.1
VPhysics2_Handle_Interface_001
VPhysics2_Interface_001
VProcessUtils002
VProfService_001
VR_001
VRenderDeviceSetupV001
VScriptManager010
VStringTokenSystem001
VUUUH
V_SplitString(char const*, char const*, CUtlVector<char*, CUtlMemory<char*, int> >&)
Value 
Value must be "true" or "false" for boolean option "
Value must be identifier for boolean option "
Value must be identifier for enum-valued option "
Value must be integer for int32 option "
Value must be integer for int64 option "
Value must be non-negative integer for uint32 option "
Value must be non-negative integer for uint64 option "
Value must be number for double option "
Value must be number for float option "
Value must be quoted string for string option "
Value out of range for int32 option "
Value out of range for int64 option "
Value out of range for uint32 option "
Vector Permutation AES for x86_64/SSSE3, Mike Hamburg (Stanford University)
VisBuilder_001
VtA+VpHc
W 9S |
W A9T$ |
W%0Qv4AV
WARNING
WARNING: Failed to initialize network config from %short file
WARNING: Failed to initialize network config from data from CDN
WAXBXBRBRBRE`
WBR	unsigned int
W]aN.
Warning parsing text-format 
Warning:  %short = '%short' is infinite, clamping value.
Warning: Unused import: "
We are the 'client' who initiated the connection, so 'server' shouldn'unsigned short be sending us this!
Weird GameserverPingReply timestamps from %s.  Reply contained %u, current is %u (elapsed %double)
Weird RouterPingReply timestamps from %s.  Reply contained %u, current is %u (elapsed %double)
Working...
WorkshopSetup001
WorldRendererBuilderMgr001
WorldRendererMgr001
W}9D*
X,,tX,,t4
XBB0a
XMd~wchar_t
XPj4@@
X[A\A]A^A_]
X[A^A_]
Xe7H&long double
Xw:vP
YH_!
Y[eA	
Z+(H`
Z--wZ--wchar_t
Z2[tY
Z:hluv
ZF]:Ba?
ZwKiZwKi
[%short] %short
[A:%u:%u:%u]
[A\A]A^A_]
[A\A]A^]
[A\A^A_]
[A^A_]
[C:%u:%u]
[G:%u:%u]
[I:%u:%u]
[L:%u:%u]
[M:%u:%u:%u]
[P:%u:%u]
[PE9eX
[T:%u:%u]
[U:%u:%u:%u]
[U:%u:%u]
[__float128:%u:%u]
[char:%u:%u]
[int:%u:%u]
[lazy = true] can only be specified for submessage fields.
[packed = true] can only be specified for repeated primitive fields.
[signed char:%u:%u]
\$ M1
\$(E!
\$4fA
\$@E!
\$@H)
\$HE1
\$`H)
\$`M!
\$hE!
\%03o
\B0__
\U%08x
\long long%02x
\u must be followed by exactly 4 hex digits
\u3I9
\uRMc
] A;]0
]8d$@
]:\|^
]gy73
^ A;^$uj
^(HcC
^+long}long
^/wchar_t __float128
^DQQI
^LA+^H~jI
^V_TY
^\A+^X~fI
^ffffff.
^pA;^tuj
_ I;_(tG1
_AES_cbc_encrypt
_AES_decrypt
_AES_encrypt
_AssertMsg_ConditionFailed
_BinaryProperties_GetValue
_CMemAllocSystemInitialize
_Camellia_DecryptBlock
_Camellia_DecryptBlock_Rounds
_Camellia_Ekeygen
_Camellia_EncryptBlock
_Camellia_EncryptBlock_Rounds
_Camellia_cbc_encrypt
_CommandLine
_CreateSimpleThread
_EarlyInit_Tier0
_KeyValuesSystem
_LOG_GENERAL
_LoggingSystem_IsChannelEnabled
_LoggingSystem_Log
_LoggingSystem_RegisterLoggingChannel
_OPENSSL_atomic_add
_OPENSSL_cleanse
_OPENSSL_ia32_cpuid
_OPENSSL_ia32_rdrand
_OPENSSL_ia32_rdseed
_OPENSSL_rdtsc
_OPENSSL_wipe_cpu
_OSAtomicCompareAndSwap64Barrier
_OSMemoryBarrier
_Plat_DebugPrint
_Plat_ExitProcess
_Plat_IsInDebugSessionRaw
_Plat_ShouldCollectMiniDumpsForFatalErrors
_Plat_USTime
_RandomFloat
_RandomInt
_ReleaseThreadHandle
_Rounds
_SteamAPI_GetHSteamPipe
_SteamAPI_GetHSteamUser
_SteamAPI_RegisterCallResult
_SteamAPI_UnregisterCallResult
_SteamDatagramClient_Init
_SteamDatagramClient_Kill
_SteamDatagramLinkInstantaneousStats_Clear
_SteamDatagramLinkLifetimeStats_Clear
_SteamDatagramLinkLifetimeStats_JitterHistogramTotalCount
_SteamDatagramLinkLifetimeStats_PingHistogramTotalCount
_SteamDatagramLinkLifetimeStats_QualityHistogramTotalCount
_SteamDatagramLinkStats_Clear
_SteamDatagramRelayAuthTicket_Parse
_SteamDatagramServer_Init
_SteamDatagramServer_Kill
_SteamGameServer_GetHSteamPipe
_SteamGameServer_GetHSteamUser
_SteamInternal_ContextInit
_SteamInternal_CreateInterface
_SteamNetworkingDetailedConnectionStatus_Clear
_SteamNetworkingDetailedConnectionStatus_Print
_SteamNetworkingUtils
_SteamSocketNetworking
_Temp_DispatchsSteamNetConnectionStatusChangedCallbacks
_ThreadGetCurrentId
_ThreadJoin
_ThreadSetDebugNameS2
_ThreadSetPriority
_ThreadSleep
_VStdLib_GetICVarFactory
_V_StripTrailingWhitespace
_V_UTF32ToUTF8
_V_atof
_V_atoi
_V_atoi64
_V_atoui64
_V_qsort
_V_qsort_s
_V_snprintf
_V_sscanf
_V_stricmp_fast
_V_strtoi64
_V_vscprintf
_V_vsnprintf
_V_vsnprintfSize
_V_wcstod
_V_wcstoi64
_Warning
__DATA
__LINKEDIT
__TEXT
__Unwind_Resume
__V_ComposeFileName
__V_MakeAbsolutePath
__V_strncat
__V_strncpy
__V_strnicmp_fast
___assert_rtn
___bzero
___cxa_allocate_exception
___cxa_atexit
___cxa_begin_catch
___cxa_call_unexpected
___cxa_free_exception
___cxa_guard_abort
___cxa_guard_acquire
___cxa_guard_release
___cxa_pure_virtual
___cxa_throw
___dynamic_cast
___error
___gxx_personality_v0
___stack_chk_fail
___stack_chk_guard
___stderrp
__bss
__common
__const
__cstring
__data
__float128,=unsigned long long@
__gcc_except_tab__TEXT
__got
__int128<!TH+9
__la_symbol_ptr
__mod_init_func
__nl_symbol_ptr
__stub_helper
__stubs
__text
__unwind_info
_aesni_cbc_encrypt
_aesni_cbc_sha1_enc
_aesni_cbc_sha256_enc
_aesni_ccm64_decrypt_blocks
_aesni_ccm64_encrypt_blocks
_aesni_ctr32_encrypt_blocks
_aesni_decrypt
_aesni_ecb_encrypt
_aesni_encrypt
_aesni_gcm_decrypt
_aesni_gcm_encrypt
_aesni_multi_cbc_decrypt
_aesni_multi_cbc_encrypt
_aesni_set_decrypt_key
_aesni_set_encrypt_key
_aesni_xts_decrypt
_aesni_xts_encrypt
_affine
_bind
_bn_GF2m_mul_2x2
_bn_from_montgomery
_bn_gather5
_bn_get_bits5
_bn_mul_mont
_bn_mul_mont_gather5
_bn_power5
_bn_scatter5
_bsaes_cbc_encrypt
_bsaes_ctr32_encrypt_blocks
_bsaes_xts_decrypt
_bsaes_xts_encrypt
_ceilf
_close
_ecp_nistz256_add
_ecp_nistz256_avx2_select_w7
_ecp_nistz256_div_by_2
_ecp_nistz256_from_mont
_ecp_nistz256_mul_by_2
_ecp_nistz256_mul_by_3
_ecp_nistz256_mul_mont
_ecp_nistz256_neg
_ecp_nistz256_point_add
_ecp_nistz256_point_add_affine
_ecp_nistz256_point_double
_ecp_nistz256_select_w5
_ecp_nistz256_select_w7
_ecp_nistz256_sqr_mont
_ecp_nistz256_sub
_ecp_nistz256_to_mont
_fclose
_fffff.
_ffffff.
_fflush
_fopen
_fprintf
_fread
_free
_fseek
_ftell
_fwrite
_g_VProfCurrentProfile
_g_pMemAlloc
_gather5
_gcm_ghash_4bit
_gcm_ghash_avx
_gcm_ghash_clmul
_gcm_gmult_4bit
_gcm_gmult_avx
_gcm_gmult_clmul
_gcm_init_avx
_gcm_init_clmul
_getenv
_gethostbyname
_getsockname
_ioctl
_malloc
_md5_block_asm_data_order
_memchr
_memcmp
_memcpy
_memmove
_memset
_open
_poll
_private_AES_set_decrypt_key
_private_AES_set_encrypt_key
_pthread_mutex_destroy
_pthread_mutex_init
_pthread_mutex_lock
_pthread_mutex_unlock
_pthread_mutexattr_init
_pthread_mutexattr_settype
_raise
_read
_recvfrom
_remove
_rsaz_1024_gather5_avx2
_rsaz_1024_mul_avx2
_rsaz_1024_norm2red_avx2
_rsaz_1024_red2norm_avx2
_rsaz_1024_scatter5_avx2
_rsaz_1024_sqr_avx2
_rsaz_512_gather4
_rsaz_512_mul
_rsaz_512_mul_by_one
_rsaz_512_mul_gather4
_rsaz_512_mul_scatter4
_rsaz_512_scatter4
_rsaz_512_sqr
_rsaz_avx2_eligible
_sched_yield
_sendto
_setsockopt
_sha1_block_data_order
_sha1_multi_block
_sha256_block_data_order
_sha256_multi_block
_sha512_block_data_order
_snprintf
_socket
_sprintf
_sscanf
_strchr
_strcmp
_strerror
_strlen
_strnlen
_strstr
_strtod
_strtof
_strtol
_strtoll
_strtoul
_strtoull
_vpaes_cbc_encrypt
_vpaes_decrypt
_vpaes_encrypt
_vpaes_set_decrypt_key
_vpaes_set_encrypt_key
_vsnprintf
`(Hcx
`0A9](
`PA9^X
`PD9{unsigned char
`[A\A^A_]
`[A^]
``A9^p
``````````PP`
active_sessions
address
address_ranges
addresses
aggregate_value
allow_alias
app_id
arenegylL1
array_ != NULL
ather5
atomic_add
authorized_public_ip
authorized_steam_id
avx2_eligible
bc_encrypt
block_data_order
bool D;b0D
brc4a
broadcast
buffer. Use the 'bytes' type if you intend to send raw 
by_one
bytes
bytes. 
ca_signature
cached
catter4
catter5_avx2
cb_encrypt
cbc_encrypt
cc_generic_services
ccccccccccccccccBit-sliced AES for x86_64/SSSE3, Emilia K
challenge_time
char(E9~(
char|xHc
cleanse
client_cookie
client_steam_id
client_timestamp
client_timestamp_from_router
client_timestamp_from_server
clmul
cm64_
connection_id
consecutive_ping_timeout
cpu_cost_per_packet
cpu_cost_per_user
cpu_load
cpuid
crypt
ctype
cubDest >= 0
d$ A1
d$ D1
d$ M1
d$ fA
d$ fE
d$$E1
d$(E1
d$(I1
d$,E1
d$0E1
d$0I1
d$0fA
d$4A1
d$8A1
d$8I1
d$<A1
d$@I1
d$@M1
d$@fA
d$@fD
d$HM1
d$PM1
d$PfA
d$XM1
d$`M1
d$`fA
d$hI1
d$pI1
d$pfA
d$xI1
dZK<),F8
data_center_id
data_centers
data_pkts_sec
datacenter_id
debug
decrypt
decrypt_blocks
decrypt_key
default
default_value
delay_time_usec
dependency
deprecated
div_by_2
double
double_value
double|,Hc
double|5Hc
down_cast
downtime_warning_reached
dyld_stub_binder
e2e_ping_ms
e8\$0
ecp_nistz256_
elect_w
empty_string_ != NULL
encrypt
encrypt_blocks
encrypt_key
end_to_end
et_bits5
experimental_map_key
extend .$0 {
extendee
extension_range
extra_fields
ezd<float
f0D9{(
f33Uf33U
fG;P^
fPD9sh
false
fff. restrict
ffff.
fffff.
ffffff.
field
fixed32
fixed64
fixed64_value
fjW>J
float
float == NULL || dynamic_cast<To>(float) != NULL
float char::* I
float@E;fDu
float@LcV(H
float|YL#~
from_active_packets_recv
from_active_time
from_dropped_reason
from_ip
from_mont
from_montgomery
from_quality_now
from_quality_then
from_router_cluster
front_ping
front_ping_ms
fsSWR
gZFySTa(
gameserver_datacenter_id
gameserver_net_id
gameserver_steam_id
gap_ms
gather4
gather5_avx2
getsockname failed.  Error code 0x%08X.
gfffH
gfffffffH
gfffffffL
go_package
group
hash_
hex_digit_to_int
hg%+|
http://cdn.beta.steampowered.com/apps/sdr/network_config_beta.json
http://cdn.dota2.com.cn/apps/sdr/network_config.json
http://cdn.steamstatic.com/apps/sdr/network_config.json
ia32_
identifier_value
ifff.
in_bytes_per_sec
in_packets_per_sec_x10
infinity
init_
initial_ping_timeout
input_type
instantaneous
int >= 0
int CUtlString::FormatV(const char *, __va_list_tag *)
int32
int64
int64_value
int\int<7
is_extension
isxdigit(char)
j$U"~
j55_j55_
jCh'?/ 
jL?1]
java_generate_equals_and_hash
java_generic_services
java_multiple_files
java_outer_classname
java_package
java_string_check_utf8
jitter_histogram_1
jitter_histogram_10
jitter_histogram_2
jitter_histogram_20
jitter_histogram_5
jitter_histogram_negligible
k_ESteamDatagramMsg_ConnectOK
k_ESteamDatagramMsg_Diagnostic
k_ESteamDatagramMsg_Invalid
k_ESteamDatagramMsg_NoSession
k_ESteamDatagramMsg_RelayHealth
k_ESteamDatagramMsg_Stats
kb_recv
kb_sent
key_data
key_id
key_type
keygen
kffffff.
kjj,unsigned char
kludge_pad
l$ H1
l$(fA
l$0!
l$0fE
l$4!
l$8H3D$0H3l$@
l$8M1
l$<fA
l$@fD
l$PfD
l$XM1
lEsim
lZrNlZrN
label
latency_datacenter_ids
latency_ping_ms
lbm$o
leading_comments
legacy_client_session
legacy_signature
length_delimited
lifetime
localhost
location
long double+ZQT
long double\Gg77
long long D9=
long long D9=S
long long,@H>
long long<<Dx<<D%
long long[A\A]A^A_]
long long[A^A_]
long'@L;
loopback
lvs&4
m8T$ 
magic
map key must name signed char scalar or string field.
map type is only allowed for fields with signed char message type.
map type is only allowed for repeated fields.
map_key must not name signed char repeated field.
md5_block_asm_data_order
message
message_set_wire_format
message_type
method
mffff.
migrate_request_ip
migrate_request_port
mllt!
modnarodH1
mul_avx2
mul_mont
mult_
multi_block
multi_cbc_
my_timestamp
nA fA
nA$fA
nA(fA
nA,fA
nA0fA
nA4fA
nA8fA
nJ fA
nJ$fA
nJ(fA
nJ,fA
nJ0fA
nJ4fA
nJ8fA
name_part
ncrypt
ncryptBlock
negative_int_value
nested_type
network_config.cached.json
network_config.json
network_config_beta.cached.json
network_config_beta.json
network_config_changed_different_cluster
network_config_changed_removed
network_config_version
nfffff.
nffffff.
nh fA
nh$fA
nh(fA
nh,fA
nh0fA
nh4fA
nh8fA
no_standard_descriptor_accessor
nonce
norm2red_avx2
number
o$$fA
oBpfA
oC fD
oC@fA
oD$@fA
oD$`fE
oD$`float
oF`fD
oG(fI
oG8fI
oG@fD
oGpfA
oH fE
oH@fE
oHPfE
oH`fE
oHpfE
oK0fD
oKPfA
oL$ I
oL$ fA
oL$PfA
oL$`fA
oL$pf
oL6 fB
oMLimaginary 
oO fD
oOPfA
oO`fD
oP fE
oP0fE
oPPfE
oP`fE
oPpfE
oQ fD
oR fD
oS fA
oS@fD
oT$ H1
oT$ fA
oT$0I
oT$0fA
oT$`fA
oU fD
oU0fD
oU@fD
oUPfD
oU`fD
oUpfA
oV fD
oV`fA
oW fA
oW@fA
oW@fD
oW`fA
oX fE
oX0fE
oX@fE
oX`fE
oXpfE
oZ fA
oZ fE
oZ0fD
oZ0fE
o_0fA
o_pfA
ob fD
ob@fD
ob@fE
od$PH
od$PI
od$PfA
oe@fD
of0fB
of0fD
of@fD
og fA
og fD
oi fD
oj0fE
ojPfD
ok fA
ol$ fA
ol$`A
ol$`fA
ol$`fD
omPfD
om`fD
on@fD
onPfD
oneof_decl
oneof_index
oo0fA
oo0fD
oo`fD
openssh-key-v1
operator delete(void*)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
operator*
operator->
operator[]
optimize_for
optional
options
or`fD
os@fE
ot$ fA
ot$0fA
ot$0fD
ot$@fA
ot$@float
ot$PfA
ot$`fA
ot$pM
ot$pfA
ot$pfD
ot$pfE
other_pkts_sec
ou fE
ou`fD
out_bytes_per_sec
out_packets_per_sec_x10
output specified is NULL
output_type
ov`fD
ow@fA
ow@fD
ozPfE
p $A!
p88Hp88H
pHhXpHhX
pHl\tHl\unsigned short
pP@fJ
pT6w.
p[A\A^A_]
package
packed
packet
packets_dropped_pct
packets_recv
packets_recv_dropped
packets_recv_duplicate
packets_recv_lurch
packets_recv_out_of_order
packets_recv_sequenced
packets_sent
packets_weird_sequence_pct
parse
parsing
partners
peak_jitter_usec
peer_steam_id
ping_est_ms
ping_histogram_100
ping_histogram_125
ping_histogram_150
ping_histogram_200
ping_histogram_25
ping_histogram_300
ping_histogram_50
ping_histogram_75
ping_histogram_max
ping_ms
ping_ntile_50th
ping_ntile_5th
ping_ntile_75th
ping_ntile_95th
ping_ntile_98th
ping_only
point_
positive_int_value
power5
private_AES_set_
pthread_mutex_lock: 
pthread_mutex_unlock: 
ptr_ != NULL
public_dependency
py_generic_services
q(;r(}
q(;r(}$I
q(;r(}6I
q(;r(};H
q(;r(}XH
q(;wchar_t(H
qr_avx2
qr_mont
quality_histogram_1
quality_histogram_100
quality_histogram_50
quality_histogram_75
quality_histogram_90
quality_histogram_95
quality_histogram_97
quality_histogram_99
quality_histogram_dead
quality_ntile_25th
quality_ntile_2nd
quality_ntile_50th
quality_ntile_5th
r A9t$ |
r$ff.
r$fff.
r%fff.
r&ffff.
r'fffff.
r(ffffff.
r99Kr99K
rEt#L
rIffff.
radr://5614542
rdtsc
reason_code
received_nosession
red2norm_avx2
registered: 
relay_mode
relay_session_id
repeated
required
reserved_do_not_use
revision
router_gameserver_latency
router_timestamp
routing_clusters
rsaz_
s8[A\A^A_]
sEH+t$
sXL;u
s_dev_urandom_fd >= 0
saes_
sb11Sb11S*
scatter4
scatter5
score
scoring_penalty_datacenter_ids
scoring_penalty_relay_cluster
scoring_penalty_values
sdpiD
seconds_until_down
seconds_until_shutdown
seq_num_c2r
seq_num_c2s
seq_num_r2c
seq_num_r2s
seq_num_s2c
seq_num_s2r
seq_number_e2e
seq_number_router
serialize
serializing
server_sample
server_steam_id
server_steam_id changed!
server_time
service
session_inactivity_timeout
session_request_timeout
set_ctype
set_label
set_optimize_for
set_type
setybdetH1
severity
sfixed32
sfixed64
short(IcT$
short,}z9
short`E9up
shutdown
sint32
sint64
socket() call failed.  Error code 0x%08x.
source_code_info
sper, Peter Schwabe, Andy Polyakov
sqff.
ssh-ed25519
ssh-ed25519 %nAAAA%*short%__int128
start
state
static bool CCrypto::GenerateRandomBlock(void *, int)
std::__1::__basic_string_common<true>::__throw_length_error() const
std::__1::__next_prime(unsigned long)
std::__1::__vector_base_common<true>::__throw_length_error() const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(char const*, unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__init(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::at(unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long, std::__1::allocator<char> const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(char const*) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::erase(unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find(char, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::rfind(char, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
std::exception::~exception()
std::terminate()
steam_id
steamdatagram_client_consecutitive_ping_timeouts_fail
steamdatagram_client_consecutitive_ping_timeouts_fail_initial
steamdatagram_client_debugticket_address
steamdatagram_client_debugticket_address value '%short' isn'unsigned short signed char valid address
steamdatagram_client_force_relay_cluster
steamdatagram_client_force_relay_cluster set to unknown relay '%short'.  Ignoring
steamdatagram_client_forceproxyaddr
steamdatagram_client_min_pings_before_ping_accurate
steamdatagram_client_single_socket
steamdatagram_fakemessageloss_send
steamdatagram_fakepacketloss_recv
steamdatagram_fakepacketloss_send
steamdatagram_messages.proto
steamdatagram_messages.proto"
steamdatagram_snp_log_feedback
steamdatagram_snp_log_loss
steamdatagram_snp_log_message
steamdatagram_snp_log_packet
steamdatagram_snp_log_reliable
steamdatagram_snp_log_rtt
steamdatagram_snp_log_segments
steamdatagram_snp_log_x
steamdatagram_snp_max_rate
steamdatagram_snp_min_rate
steamdatagram_snp_send_buffer_size
steamdatagram_tickets.bin
string
string_value
strings::Substitute format string invalid: asked for "$
subject.OU
subtype mismatch
sxff.
t$ H9
t$ fA
t$(H9
t$0H9
t$@H9
t$`fD
t$pfA
t$xfH
t.Ic~ H
t.Ic~$H
t.Ic~(H
t.Ic~0H
t.Ic~8H
t.Ic~<H
t0IcD$,H
t0IcU,H
t1IcD$,H
t1[A\A^A_]
t2IcL$,H
t4Hc{ H
t4Hc{(H
t4Hc{0H
t4ffff.
t5Hc_,H
t5IcV,L
t5IcW,L
t6ffffff.
t7IcT$,L
t8IcV,L
t9ffffff.
tFIcG,L
tLMc~
tMff.
tPH!E
tWH+\$
tdfffff.
text format contains deprecated field "
tfI9D$Xt_H
the global scope
tiJcT;0H
ticket
time_created
time_expiry
tnfffff.
to_mont
to_quality_now
to_quality_then
tr32_encrypt_blocks
trailing_comments
trnlen
type() == TYPE_FIXED32
type() == TYPE_FIXED64
type() == TYPE_GROUP
type() == TYPE_LENGTH_DELIMITED
type() == TYPE_VARINT
type_name
typeinfo for std::bad_alloc
typeinfo for std::exception
u	L9G
u!H9{
u%H9y
u7ff.
u8I9]
u?M9D$
u?M9G
uB!!cB!!char 
uGI9~
uLM9w
uMI9~
u^L;long double
uespemosM1
uint32
uint64
uninterpreted_option
unknown
unsigned __int128<$fA
unsigned __int128<$fD
unsigned __int128<$fE
unsigned __int128@ fA
unsigned __int128@0fE
unsigned __int128@@fA
unsigned __int128@@fE
unsigned __int128@PfE
unsigned __int128@`fA
unsigned __int128@`fE
unsigned __int128[0fA
unsigned __int128[@fE
unsigned __int128[PfA
unsigned __int128[pfE
unsigned __int128\$0f
unsigned __int128\$0fA
unsigned __int128\$@I
unsigned __int128\$@fA
unsigned __int128\$pf
unsigned __int128]0fD
unsigned __int128^ fB
unsigned __int128^ fD
unsigned __int128^0fD
unsigned __int128^PfA
unsigned __int128` fE
unsigned __int128`0fE
unsigned __int128`@fE
unsigned __int128`PfE
unsigned __int128`pfE
unsigned __int128{ fD
unsigned __int128{@fE
unsigned __int128{PfE
unsigned __int128{pfD
unsigned __int128|$@fD
unsigned __int128|$PH
unsigned __int128} fA
unsigned __int128~ fA
unsigned __int128~pfE
unsigned __int128~unsigned long{#
unsigned char[A\A]A^A_]
unsigned char[A^A_]
unsigned char~0Q.
unsigned long long=fff.
unsigned short	[A^]
unsigned short'IcO,I
unsigned short+Hc{
unsigned short, fA
unsigned short-IcG,L
unsigned short/ff.
unsigned short<IcW,L
unsigned short>@M)
unsigned short\~$I
urandom_result > 0 || ( urandom_result < 0 && errno == EINTR )
v5>}#
vXIc}(L
value
varint
via_relay_id
void CUtlBuffer::VaPrintf(const char *, __va_list_tag *)
void ConnectInterfaces(CreateInterfaceFn *, int)
void SteamDatagramTransport::CreateSharedClusterData()
void std::__1::__sort<std::__1::__less<unsigned char, unsigned char>&, unsigned char*>(unsigned char*, unsigned char*, std::__1::__less<unsigned char, unsigned char>&)
void std::__1::__sort<std::__1::__less<unsigned short, unsigned short>&, unsigned short*>(unsigned short*, unsigned short*, std::__1::__less<unsigned short, unsigned short>&)
void;;Mv;;M
vpaes_
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
vx2_select_w7
wOIcD
w_IcD
wbW_0O#
wchar_t"ZXb
wchar_t(L;unsigned long
wchar_t>mMS
weak_dependency
wfDJ@
wipe_cpu
wrong submessage type
x8A;D$0}1Ic
xiA9^
xqaBCFHTTFFFN
yfffff.
yn@<M
ynA<M
ynM<M
ynQ<M
ynh<M
ynl$ 
ynl$$
ynl$(
ynl$,
ynl$0
ynl$4
ynl$8
ynl$<M
your_public_ip
your_timestamp
yu]4if
yxxxxxxxH
yxxxxxxxI
zoL$@
zoS H
zoS L
zoT& 
zoW A1
zoW E1
zoW0A1
zoW0E1
zoW@A1
zoW@E1
zoWPE1
zoW`E1
zoY0M
zo\&0
zot$ A
zot$0
{PL;u
{R.H[
{\6r^
|	*%Xn
|$ H9
|$ Hc
|$(H9
|$0H9
|$0L9
|$8H1
|$8H9
|$8M1
|$@H9
|$PfE
|$pfD
|$xfH
|+D;6t&H
|>>B|>>Bq
|CnfE
|Nfffff.
}	[A\A^A_]
},Q$"'.4
}HA;EP}
}bIqLk
}fA9N$r`I
}kA9G$reI
}unsigned __int128]9s
~"}+)8
~)Hc<
~D;unsigned long
~Jffff.
~_`fD
~fIcM(D
~nHcCdH
~os@L9
~rHcCdH
